import{I as Ye,J as Xe,r as M,C as ze,j as Q,o as x,d as k,a as w,n as G,t as J,e as H,m as Be,h as W,A as Ze,F as We,g as Je,f as O,T as ue,c as V,w as R,b as N,u as S,i as X,Q as D,s as et}from"./app-_5nc08WR.js";import{_ as ce}from"./PrimaryButton-C3ZsyNG3.js";import{a as ee,_ as Pe}from"./TextInput-72f419lx.js";import{_ as fe}from"./Alert-DpZd2Qga.js";import{_ as de}from"./InputLabel-BZSu9ZgK.js";const q=window.crypto||window.msCrypto,m=q.subtle||q.webkitSubtle,z="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",Z=new Uint8Array(256),pe="06092a864886f70d01050d",Y="06092a864886f70d01050c",he="060960864801650304012e",ye="060960864801650304011a",ge="0609608648016503040106",me="060960864801650304012a",be="0609608648016503040116",we="0609608648016503040102",Ee="060960864801650304012c",xe="0609608648016503040118",ve="06086086480165030404",Oe="06082a864886f70d020b0500",_e="06082a864886f70d020a0500",Ne="06082a864886f70d02090500",Ie="06082a864886f70d02070500",He="06092a864886f70d010101",De="06072a8648ce3d0201",je="06082a8648ce3d030107",Re="06052b81040022",Ke="06052b81040023";class Se{constructor(){for(let a=0;a<z.length;a++)Z[z.charCodeAt(a)]=a}encodeAb(a){const e=new Uint8Array(a),t=e.length;let n="";for(let o=0;o<t;o+=3)n+=z[e[o]>>2],n+=z[(e[o]&3)<<4|e[o+1]>>4],n+=z[(e[o+1]&15)<<2|e[o+2]>>6],n+=z[e[o+2]&63];return t%3===2?n=n.substring(0,n.length-1)+"=":t%3===1&&(n=n.substring(0,n.length-2)+"=="),n}decodeAb(a){const e=a.length;let t=a.length*.75,n=0,o,l,s,r;a[a.length-1]==="="&&(t--,a[a.length-2]==="="&&t--);const i=new ArrayBuffer(t);let u=new Uint8Array(i);for(let c=0;c<e;c+=4)o=Z[a.charCodeAt(c)],l=Z[a.charCodeAt(c+1)],s=Z[a.charCodeAt(c+2)],r=Z[a.charCodeAt(c+3)],u[n++]=o<<2|l>>4,u[n++]=(l&15)<<4|s>>2,u[n++]=(s&3)<<6|r&63;return i}arrayBufferToString(a){if(typeof a!="object")throw new TypeError("Expected input of arrayBuffer to be an ArrayBuffer Object");return new TextDecoder("utf-8").decode(a)}stringToArrayBuffer(a){if(typeof a!="string")throw new TypeError("Expected input of str to be a String");return new TextEncoder("utf-8").encode(a).buffer}arrayBufferToHexString(a){if(typeof a!="object")throw new TypeError("Expected input of arrayBuffer to be an ArrayBuffer Object");const e=new Uint8Array(a);let t="",n;for(let o=0;o<e.byteLength;o++)n=e[o].toString(16),n.length<2&&(n="0"+n),t+=n;return t}hexStringToArrayBuffer(a){if(typeof a!="string")throw new TypeError("Expected input of hexString to be a String");if(a.length%2!==0)throw new RangeError("Expected string to be an even number of characters");const e=new Uint8Array(a.length/2);for(let t=0;t<a.length;t+=2)e[t/2]=parseInt(a.substring(t,t+2),16);return e.buffer}arrayBufferToBase64(a){if(typeof a!="object")throw new TypeError("Expected input of arrayBuffer to be an ArrayBuffer Object");return this.encodeAb(a)}base64ToArrayBuffer(a){if(typeof a!="string")throw new TypeError("Expected input of b64 to be a Base64 String");return this.decodeAb(a)}decimalToHex(a,e){if(e=typeof e<"u"?e:!1,typeof e!="boolean")throw new TypeError("Expected input of unsigned to be a Boolean");let t=null;if(typeof a=="number")return e?(t=a.toString(16),t.length%2?"000"+t:"00"+t):(t=a.toString(16),t.length%2?"0"+t:t);if(typeof a=="string")return t=(a.length/2).toString(16),t.length%2?"0"+t:t;throw new TypeError("Expected input of d to be a Number or String")}addNewLines(a){let e="";for(;a.length>0;)e+=a.substring(0,64)+`\r
`,a=a.substring(64);return e}removeLines(a){return a.replace(/\r?\n|\r/g,"")}toAsn1(a,e,t,n,o,l,s){a=this.arrayBufferToHexString(a),e=this.arrayBufferToHexString(e),t=this.arrayBufferToHexString(t),n=this.decimalToHex(n,!0);const r={};switch(o){case"SHA-512":r.HASH_OID=Oe;break;case"SHA-384":r.HASH_OID=_e;break;case"SHA-256":r.HASH_OID=Ne;break;case"SHA-1":r.HASH_OID=Ie}switch(l){case"AES-GCM":s===256?r.CIPHER_OID=he:s===192?r.CIPHER_OID=ye:s===128&&(r.CIPHER_OID=ge);break;case"AES-CBC":s===256?r.CIPHER_OID=me:s===192?r.CIPHER_OID=be:s===128&&(r.CIPHER_OID=we);break;case"AES-CFB":s===256?r.CIPHER_OID=Ee:s===192?r.CIPHER_OID=xe:s===128&&(r.CIPHER_OID=ve)}const i="02"+this.decimalToHex(n.length/2)+n,u="04"+this.decimalToHex(e)+e,c="04"+this.decimalToHex(t)+t,d="04"+(this.decimalToHex(a).length/2===2?"82":"81")+this.decimalToHex(a)+a;r.SEQUENCE_AES_CONTAINER="30"+this.decimalToHex(r.CIPHER_OID+c),r.SEQUENCE_HASH_CONTAINER="30"+this.decimalToHex(r.HASH_OID),r.SEQUENCE_PBKDF2_INNER_CONTAINER="30"+this.decimalToHex(u+i+r.SEQUENCE_HASH_CONTAINER+r.HASH_OID),r.SEQUENCE_PBKDF2_CONTAINER="30"+this.decimalToHex(Y+r.SEQUENCE_PBKDF2_INNER_CONTAINER+u+i+r.SEQUENCE_HASH_CONTAINER+r.HASH_OID),r.SEQUENCE_PBES2_INNER_CONTAINER="30"+this.decimalToHex(r.SEQUENCE_PBKDF2_CONTAINER+Y+r.SEQUENCE_PBKDF2_INNER_CONTAINER+u+i+r.SEQUENCE_HASH_CONTAINER+r.HASH_OID+r.SEQUENCE_AES_CONTAINER+r.CIPHER_OID+c),r.SEQUENCE_PBES2_CONTAINER="30"+this.decimalToHex(pe+r.SEQUENCE_PBES2_INNER_CONTAINER+r.SEQUENCE_PBKDF2_CONTAINER+Y+r.SEQUENCE_PBKDF2_INNER_CONTAINER+u+i+r.SEQUENCE_HASH_CONTAINER+r.HASH_OID+r.SEQUENCE_AES_CONTAINER+r.CIPHER_OID+c);const y=r.SEQUENCE_PBES2_CONTAINER+pe+r.SEQUENCE_PBES2_INNER_CONTAINER+r.SEQUENCE_PBKDF2_CONTAINER+Y+r.SEQUENCE_PBKDF2_INNER_CONTAINER+u+i+r.SEQUENCE_HASH_CONTAINER+r.HASH_OID+r.SEQUENCE_AES_CONTAINER+r.CIPHER_OID+c,A=this.decimalToHex(y+d),g="30"+(A.length/2===2?"82":"81")+A+y+d,h=this.hexStringToArrayBuffer(g);let T=this.arrayBufferToBase64(h);return T=this.addNewLines(T),T=`-----BEGIN ENCRYPTED PRIVATE KEY-----\r
`+T+"-----END ENCRYPTED PRIVATE KEY-----",T}fromAsn1(a){a=this.removeLines(a),a=a.replace("-----BEGIN ENCRYPTED PRIVATE KEY-----",""),a=a.replace("-----END ENCRYPTED PRIVATE KEY-----",""),a=this.base64ToArrayBuffer(a);const e={},t=this.arrayBufferToHexString(a);return e.data=t,e.data.includes(pe)&&e.data.includes(Y)&&(e.valid=!0),e.saltBegin=e.data.indexOf(Y)+28,e.data.includes(he)?(e.cipher="AES-GCM",e.length=256,e.ivBegin=e.data.indexOf(he)+24):e.data.includes(ye)?(e.cipher="AES-GCM",e.length=192,e.ivBegin=e.data.indexOf(ye)+24):e.data.includes(ge)?(e.cipher="AES-GCM",e.length=128,e.ivBegin=e.data.indexOf(ge)+24):e.data.includes(me)?(e.cipher="AES-CBC",e.length=256,e.ivBegin=e.data.indexOf(me)+24):e.data.includes(be)?(e.cipher="AES-CBC",e.length=192,e.ivBegin=e.data.indexOf(be)+24):e.data.includes(we)?(e.cipher="AES-CBC",e.length=128,e.ivBegin=e.data.indexOf(we)+24):e.data.includes(Ee)?(e.cipher="AES-CFB",e.length=256,e.ivBegin=e.data.indexOf(Ee)+24):e.data.includes(xe)?(e.cipher="AES-CFB",e.length=192,e.ivBegin=e.data.indexOf(xe)+24):e.data.includes(ve)&&(e.cipher="AES-CFB",e.length=128,e.ivBegin=e.data.indexOf(ve)+22),e.data.includes(Oe)?e.hash="SHA-512":e.data.includes(_e)?e.hash="SHA-384":e.data.includes(Ne)?e.hash="SHA-256":e.data.includes(Ie)&&(e.hash="SHA-1"),e.saltLength=parseInt(e.data.substr(e.saltBegin,2),16),e.ivLength=parseInt(e.data.substr(e.ivBegin,2),16),e.salt=e.data.substr(e.saltBegin+2,e.saltLength*2),e.iv=e.data.substr(e.ivBegin+2,e.ivLength*2),e.iterBegin=e.saltBegin+4+e.saltLength*2,e.iterLength=parseInt(e.data.substr(e.iterBegin,2),16),e.iter=parseInt(e.data.substr(e.iterBegin+2,e.iterLength*2),16),e.sequencePadding=e.data.substr(2,2)==="81"?8:10,e.parametersPadding=e.data.substr(2,2)==="81"?12:16,e.sequenceLength=parseInt(e.data.substr(e.sequencePadding,2),16),e.encryptedDataBegin=e.parametersPadding+e.sequenceLength*2,e.encryptedDataPadding=e.data.substr(e.encryptedDataBegin-2,2)==="81"?2:4,e.encryptedDataLength=parseInt(e.data.substr(e.encryptedDataBegin,6),16),e.encryptedData=e.data.substr(e.encryptedDataBegin+e.encryptedDataPadding,e.encryptedDataLength*2),{salt:this.hexStringToArrayBuffer(e.salt),iv:this.hexStringToArrayBuffer(e.iv),cipher:e.cipher,length:e.length,hash:e.hash,iter:e.iter,encryptedData:this.hexStringToArrayBuffer(e.encryptedData)}}cryptoPrivateToPem(a){const e=this;return new Promise((t,n)=>{if(Object.prototype.toString.call(a)!=="[object CryptoKey]"&&a.type!=="private")throw new TypeError("Expected input to be a CryptoKey Object");m.exportKey("pkcs8",a).then(o=>{const l=e.arrayBufferToBase64(o);let s=e.addNewLines(l);s=`-----BEGIN PRIVATE KEY-----\r
`+s+"-----END PRIVATE KEY-----",t(s)}).catch(o=>{n(o)})})}pemPrivateToCrypto(a,e){const t=this;return typeof e>"u"&&(e={}),e.isExtractable=typeof e.isExtractable<"u"?e.isExtractable:!0,new Promise((n,o)=>{if(typeof a!="string")throw new TypeError("Expected input of pem to be a String");if(typeof e.isExtractable!="boolean")throw new TypeError("Expected input of options.isExtractable to be a Boolean");a=a.replace("-----BEGIN PRIVATE KEY-----",""),a=a.replace("-----END PRIVATE KEY-----","");const l=t.removeLines(a),s=t.base64ToArrayBuffer(l),r=t.arrayBufferToHexString(s),i={};if(r.includes(De)){if(e.name=typeof e.name<"u"?e.name:"ECDH",typeof e.name!="string")throw new TypeError("Expected input of options.name to be a String");let u=null;if(r.includes(je)?u="P-256":r.includes(Re)?u="P-384":r.includes(Ke)&&(u="P-521"),e.name==="ECDH")e.usages=typeof e.usages<"u"?e.usages:["deriveKey","deriveBits"];else if(e.name==="ECDSA")e.usages=typeof e.usages<"u"?e.usages:["sign"];else throw new TypeError("Expected input of options.name is not a valid algorithm name");if(typeof e.usages!="object")throw new TypeError("Expected input of options.usages to be an Array");i.name=e.name,i.namedCurve=u}else if(r.includes(He)){if(e.name=typeof e.name<"u"?e.name:"RSA-OAEP",e.hash=typeof e.hash<"u"?e.hash:"SHA-512",typeof e.name!="string")throw new TypeError("Expected input of options.name to be a String");if(typeof e.hash!="string")throw new TypeError("Expected input of options.hash to be a String");if(e.name==="RSA-OAEP")e.usages=typeof e.usages<"u"?e.usages:["decrypt","unwrapKey"];else if(e.name==="RSA-PSS")e.usages=typeof e.usages<"u"?e.usages:["sign"];else throw new TypeError("Expected input of options.name is not a valid algorithm name");if(typeof e.usages!="object")throw new TypeError("Expected input of options.usages to be an Array");i.name=e.name,i.hash={},i.hash.name=e.hash}else throw new TypeError("Expected input of pem is not a valid private key");m.importKey("pkcs8",s,i,e.isExtractable,e.usages).then(u=>{n(u)}).catch(u=>{o(u)})})}cryptoPublicToPem(a){const e=this;return new Promise((t,n)=>{if(Object.prototype.toString.call(a)!=="[object CryptoKey]"&&a.type!=="public")throw new TypeError("Expected input of publicKey to be a CryptoKey Object of type public");m.exportKey("spki",a).then(o=>{const l=e.arrayBufferToBase64(o);let s=e.addNewLines(l);s=`-----BEGIN PUBLIC KEY-----\r
`+s+"-----END PUBLIC KEY-----",t(s)}).catch(o=>{n(o)})})}pemPublicToCrypto(a,e){const t=this;return typeof e>"u"&&(e={}),e.isExtractable=typeof e.isExtractable<"u"?e.isExtractable:!0,new Promise((n,o)=>{if(typeof a!="string")throw new TypeError("Expected input of pem to be a String");if(typeof e.isExtractable!="boolean")throw new TypeError("Expected input of options.isExtractable to be a Boolean");a=a.replace("-----BEGIN PUBLIC KEY-----",""),a=a.replace("-----END PUBLIC KEY-----","");const l=t.removeLines(a),s=t.base64ToArrayBuffer(l),r=t.arrayBufferToHexString(s),i={};if(r.includes(De)){if(e.name=typeof e.name<"u"?e.name:"ECDH",typeof e.name!="string")throw new TypeError("Expected input of options.name to be a String");let u=null;if(r.includes(je)?u="P-256":r.includes(Re)?u="P-384":r.includes(Ke)&&(u="P-521"),e.name==="ECDH")e.usages=typeof e.usages<"u"?e.usages:[];else if(e.name==="ECDSA")e.usages=typeof e.usages<"u"?e.usages:["verify"];else throw new TypeError("Expected input of options.name is not a valid algorithm name");if(typeof e.usages!="object")throw new TypeError("Expected input of options.usages to be an Array");i.name=e.name,i.namedCurve=u}else if(r.includes(He)){if(e.name=typeof e.name<"u"?e.name:"RSA-OAEP",e.hash=typeof e.hash<"u"?e.hash:"SHA-512",typeof e.name!="string")throw new TypeError("Expected input of options.name to be a String");if(typeof e.hash!="string")throw new TypeError("Expected input of options.hash to be a String");if(e.name==="RSA-OAEP")e.usages=typeof e.usages<"u"?e.usages:["encrypt","wrapKey"];else if(e.name==="RSA-PSS")e.usages=typeof e.usages<"u"?e.usages:["verify"];else throw new TypeError("Expected input of options.name is not a valid algorithm name");if(typeof e.usages!="object")throw new TypeError("Expected input of options.usages to be an Array");i.name=e.name,i.hash={},i.hash.name=e.hash}else throw new TypeError("Expected input of pem is not a valid public key");m.importKey("spki",s,i,e.isExtractable,e.usages).then(u=>{n(u)}).catch(u=>{o(u)})})}cryptoToBase64(a,e){const t=this;let n=null;switch(a.type){case"secret":n="raw";break;case"private":n="pkcs8";break;case"public":n="spki"}return e=typeof e<"u"?e:n,new Promise((o,l)=>{if(Object.prototype.toString.call(a)!=="[object CryptoKey]")throw new TypeError("Expected input of key to be a CryptoKey Object");if(typeof e!="string")throw new TypeError("Expected input of type to be a String");m.exportKey(n,a).then(s=>{const r=t.arrayBufferToBase64(s);o(r)}).catch(s=>{l(s)})})}base64ToCrypto(a,e){const t=this;return typeof e>"u"&&(e={}),e.name=typeof e.name<"u"?e.name:"AES-GCM",e.isExtractable=typeof e.isExtractable<"u"?e.isExtractable:!0,new Promise((n,o)=>{if(typeof a!="string")throw new TypeError("Expected input of key to be a Base64 String");if(typeof e.name!="string")throw new TypeError("Expected input of options.name to be a String");if(typeof e.isExtractable!="boolean")throw new TypeError("Expected input of options.isExtractable to be a Boolean");const l={};if(l.name=e.name,e.name==="AES-GCM"||e.name==="AES-CBC"){if(e.type=typeof e.type<"u"?e.type:"raw",e.length=typeof e.length<"u"?e.length:256,e.usages=typeof e.usages<"u"?e.usages:["encrypt","decrypt","wrapKey","unwrapKey"],typeof e.length!="number")throw new TypeError("Expected input of options.length to be a Number")}else if(e.name==="ECDH"){if(e.type=typeof e.type<"u"?e.type:"pkcs8",e.namedCurve=typeof e.namedCurve<"u"?e.namedCurve:"P-256",e.usages=typeof e.usages<"u"?e.usages:["deriveKey","deriveBits"],typeof e.namedCurve!="string")throw new TypeError("Expected input of options.namedCurve to be a String");l.namedCurve=e.namedCurve}else if(e.name==="ECDSA"){if(e.type=typeof e.type<"u"?e.type:"pkcs8",e.namedCurve=typeof e.namedCurve<"u"?e.namedCurve:"P-256",e.usages=typeof e.usages<"u"?e.usages:["sign"],typeof e.namedCurve!="string")throw new TypeError("Expected input of options.namedCurve to be a String");l.namedCurve=e.namedCurve}else if(e.name==="RSA-OAEP"){if(e.type=typeof e.type<"u"?e.type:"pkcs8",e.hash=typeof e.hash<"u"?e.hash:"SHA-512",e.usages=typeof e.usages<"u"?e.usages:["decrypt","unwrapKey"],typeof e.hash!="string")throw new TypeError("Expected input of options.hash to be a String");l.hash={},l.hash.name=e.hash}else if(e.name==="RSA-PSS"){if(e.type=typeof e.type<"u"?e.type:"pkcs8",e.hash=typeof e.hash<"u"?e.hash:"SHA-512",e.usages=typeof e.usages<"u"?e.usages:["sign"],typeof e.hash!="string")throw new TypeError("Expected input of options.hash to be a String");l.hash={},l.hash.name=e.hash}else throw new TypeError("Expected input of options.name is not a valid algorithm name");if(typeof e.type!="string")throw new TypeError("Expected input of options.type to be a String");if(typeof e.usages!="object")throw new TypeError("Expected input of options.usages to be an Array");const s=t.base64ToArrayBuffer(a);m.importKey(e.type,s,l,e.isExtractable,e.usages).then(r=>{n(r)}).catch(r=>{o(r)})})}getRSAKeyPair(a,e,t,n,o){return a=typeof a<"u"?a:2048,e=typeof e<"u"?e:"SHA-512",t=typeof t<"u"?t:"RSA-OAEP",o=typeof o<"u"?o:!0,new Promise((l,s)=>{if(typeof a!="number")throw new TypeError("Expected input of modulusLength to be a Number");if(typeof e!="string")throw new TypeError("Expected input of hash expected to be a String");if(typeof t!="string")throw new TypeError("Expected input of paddingScheme to be a String");if(typeof o!="boolean")throw new TypeError("Expected input of isExtractable to be a Boolean");if(t==="RSA-OAEP")n=typeof n<"u"?n:["encrypt","decrypt","wrapKey","unwrapKey"];else if(t==="RSA-PSS")n=typeof n<"u"?n:["sign","verify"];else throw new TypeError("Expected input of paddingScheme is not a valid padding scheme");if(typeof n!="object")throw new TypeError("Expected input of usages to be an Array");m.generateKey({name:t,modulusLength:a,publicExponent:new Uint8Array([1,0,1]),hash:{name:e}},o,n).then(r=>{l(r)}).catch(r=>{s(r)})})}rsaEncrypt(a,e){const t=this;return new Promise((n,o)=>{if(Object.prototype.toString.call(a)!=="[object CryptoKey]"&&a.type!=="public")throw new TypeError("Expected input of publicKey to be a CryptoKey Object of type public");if(typeof e!="object")throw new TypeError("Expected input of data to be an ArrayBuffer");m.encrypt({name:"RSA-OAEP"},a,e).then(l=>{const s=t.arrayBufferToBase64(l);n(s)}).catch(l=>{o(l)})})}rsaDecrypt(a,e){const t=this;return new Promise((n,o)=>{if(Object.prototype.toString.call(a)!=="[object CryptoKey]"&&a.type!=="private")throw new TypeError("Expected input of privateKey to be a CryptoKey Object of type private");if(typeof e!="string")throw new TypeError("Expected input of encryptedData to be a Base64 String");const l=t.base64ToArrayBuffer(e);m.decrypt({name:"RSA-OAEP"},a,l).then(s=>{n(s)}).catch(s=>{o(s)})})}getECKeyPair(a,e,t,n){return a=typeof a<"u"?a:"P-256",e=typeof e<"u"?e:"ECDH",n=typeof n<"u"?n:!0,new Promise((o,l)=>{if(typeof a!="string")throw new TypeError("Expected input of curve to be a String");if(typeof e!="string")throw new TypeError("Expected input of type to be a String");if(typeof n!="boolean")throw new TypeError("Expected input of isExtractable to be a Boolean");if(e==="ECDH")t=typeof t<"u"?t:["deriveKey","deriveBits"];else if(e==="ECDSA")t=typeof t<"u"?t:["sign","verify"];else throw new TypeError("Expected input of type is not a valid algorithm type");if(typeof t!="object")throw new TypeError("Expected input of usages to be an Array");m.generateKey({name:e,namedCurve:a},n,t).then(s=>{o(s)}).catch(s=>{l(s)})})}getPublicKey(a,e){return typeof e>"u"&&(e={}),e.isExtractable=typeof e.isExtractable<"u"?e.isExtractable:!0,new Promise((t,n)=>{if(Object.prototype.toString.call(a)!=="[object CryptoKey]"&&a.type!=="private")throw new TypeError("Expected input of privateKey must be a CryptoKey Object of type private");if(typeof e.isExtractable!="boolean")throw new TypeError("Expected input of options.isExtractable to be a Boolean");m.exportKey("jwk",a).then(o=>{const l={};switch(l.name=a.algorithm.name,a.algorithm.name){case"ECDH":if(delete o.d,o.key_ops=[],e.usages=typeof e.usages<"u"?e.usages:[],typeof e.usages!="object")throw new TypeError("Expected input of options.usages to be an Array");l.namedCurve=a.algorithm.namedCurve;break;case"ECDSA":if(delete o.d,o.key_ops=["verify"],e.usages=typeof e.usages<"u"?e.usages:["verify"],typeof e.usages!="object")throw new TypeError("Expected input of options.usages to be an Array");l.namedCurve=a.algorithm.namedCurve;break;case"RSA-OAEP":if(delete o.d,delete o.dp,delete o.dq,delete o.p,delete o.q,delete o.qi,o.key_ops=["encrypt","wrapKey"],e.usages=typeof e.usages<"u"?e.usages:["encrypt","wrapKey"],typeof e.usages!="object")throw new TypeError("Expected input of options.usages to be an Array");l.hash={},l.hash.name=a.algorithm.hash.name;break;case"RSA-PSS":if(delete o.d,delete o.dp,delete o.dq,delete o.p,delete o.q,delete o.qi,o.key_ops=["verify"],e.usages=typeof e.usages<"u"?e.usages:["verify"],typeof e.usages!="object")throw new TypeError("Expected input of options.usages to be an Array");l.hash={},l.hash.name=a.algorithm.hash.name;break;default:throw new TypeError("Expected input of privateKey is not a valid private key")}m.importKey("jwk",o,l,e.isExtractable,e.usages).then(s=>{t(s)}).catch(s=>{n(s)})}).catch(o=>{n(o)})})}encryptPrivateKey(a,e,t,n,o,l){const s=this;return t=typeof t<"u"?t:64e3,n=typeof n<"u"?n:"SHA-512",o=typeof o<"u"?o:"AES-GCM",l=typeof l<"u"?l:256,new Promise((r,i)=>{if(Object.prototype.toString.call(a)!=="[object CryptoKey]"&&a.type!=="private")throw new TypeError("Expected input of privateKey to be a CryptoKey Object of type private");if(typeof e!="string")throw new TypeError("Expected input of passphrase to be a String");if(typeof t!="number")throw new TypeError("Expected input of iterations to be a Number");if(typeof n!="string")throw new TypeError("Expected input of hash to be a String");if(typeof o!="string")throw new TypeError("Expected input of cipher to be a String");if(typeof l!="number")throw new TypeError("Expected input of length to be a Number");let u=null;switch(o){case"AES-GCM":u=12;break;case"AES-CBC":u=16;break;case"AES-CFB":u=16;break}const c=q.getRandomValues(new Uint8Array(16)),f=q.getRandomValues(new Uint8Array(u)),d=s.stringToArrayBuffer(e);m.importKey("raw",d,{name:"PBKDF2"},!1,["deriveKey"]).then(y=>{m.deriveKey({name:"PBKDF2",salt:c,iterations:t,hash:n},y,{name:o,length:l},!1,["wrapKey"]).then(A=>{m.wrapKey("pkcs8",a,A,{name:o,iv:f,tagLength:128}).then(P=>{const g=s.toAsn1(P,c,f,t,n,o,l);r(g)}).catch(P=>{i(P)})}).catch(A=>{i(A)})}).catch(y=>{i(y)})})}decryptPrivateKey(a,e,t){const n=this;return typeof t>"u"&&(t={}),t.name=typeof t.name<"u"?t.name:"ECDH",t.isExtractable=typeof t.isExtractable<"u"?t.isExtractable:!0,new Promise((o,l)=>{if(typeof a!="string")throw new TypeError("Expected input of encryptedPrivateKey to be a Base64 String");if(typeof e!="string")throw new TypeError("Expected input of passphrase to be a String");if(typeof t.isExtractable!="boolean")throw new TypeError("Expected input of options.isExtractable to be a Boolean");const s=this.fromAsn1(a),r={};if(r.name=t.name,t.name==="ECDH"){if(t.namedCurve=typeof t.namedCurve<"u"?t.namedCurve:"P-256",t.usages=typeof t.usages<"u"?t.usages:["deriveKey","deriveBits"],typeof t.namedCurve!="string")throw new TypeError("Expected input of options.namedCurve to be a String");if(typeof t.usages!="object")throw new TypeError("Expected input of options.usages to be an Array");r.namedCurve=t.namedCurve}else if(t.name==="ECDSA"){if(t.namedCurve=typeof t.namedCurve<"u"?t.namedCurve:"P-256",t.usages=typeof t.usages<"u"?t.usages:["sign"],typeof t.namedCurve!="string")throw new TypeError("Expected input of options.namedCurve to be a String");if(typeof t.usages!="object")throw new TypeError("Expected input of options.usages to be an Array");r.namedCurve=t.namedCurve}else if(t.name==="RSA-OAEP"){if(t.hash=typeof t.hash<"u"?t.hash:"SHA-512",t.usages=typeof t.usages<"u"?t.usages:["decrypt","unwrapKey"],typeof t.hash!="string")throw new TypeError("Expected input of options.hash to be a String");if(typeof t.usages!="object")throw new TypeError("Expected input of options.usages to be an Array");r.hash={},r.hash.name=t.hash}else if(t.name==="RSA-PSS"){if(t.hash=typeof t.hash<"u"?t.hash:"SHA-512",t.usages=typeof t.usages<"u"?t.usages:["sign"],typeof t.hash!="string")throw new TypeError("Expected input of options.hash to be a String");if(typeof t.usages!="object")throw new TypeError("Expected input of options.usages to be an Array");r.hash={},r.hash.name=t.hash}else throw new TypeError("Expected input of encryptedPrivateKey is not a valid encrypted private key");const i=n.stringToArrayBuffer(e);m.importKey("raw",i,{name:"PBKDF2"},!1,["deriveKey"]).then(u=>{m.deriveKey({name:"PBKDF2",salt:s.salt,iterations:s.iter,hash:s.hash},u,{name:s.cipher,length:s.length},!1,["unwrapKey"]).then(c=>{m.unwrapKey("pkcs8",s.encryptedData,c,{name:s.cipher,iv:s.iv,tagLength:128},r,t.isExtractable,t.usages).then(f=>{o(f)}).catch(f=>{l(f)})}).catch(c=>{l(c)})}).catch(u=>{l(u)})})}keyAgreement(a,e,t){return typeof t>"u"&&(t={}),t.bitLength=typeof t.bitLength<"u"?t.bitLength:256,t.hkdfHash=typeof t.hkdfHash<"u"?t.hkdfHash:"SHA-512",t.hkdfSalt=typeof t.hkdfSalt<"u"?t.hkdfSalt:new Uint8Array,t.hkdfInfo=typeof t.hkdfInfo<"u"?t.hkdfInfo:new Uint8Array,t.cipher=typeof t.cipher<"u"?t.cipher:"AES-GCM",t.length=typeof t.length<"u"?t.length:256,t.usages=typeof t.usages<"u"?t.usages:["encrypt","decrypt","unwrapKey","wrapKey"],t.isExtractable=typeof t.isExtractable<"u"?t.isExtractable:!0,new Promise((n,o)=>{if(Object.prototype.toString.call(a)!=="[object CryptoKey]"&&a.type!=="private")throw new TypeError("Expected input of privateKey to be a CryptoKey Object of type private");if(Object.prototype.toString.call(e)!=="[object CryptoKey]"&&e.type!=="public")throw new TypeError("Expected input of publicKey to be a CryptoKey Object of type public");if(typeof t.bitLength!="number")throw new TypeError("Expected input of options.bitLength to be a Number");if(typeof t.hkdfHash!="string")throw new TypeError("Expected input of options.hkdfHash to be a String");if(typeof t.hkdfSalt!="object")throw new TypeError("Expected input of options.hkdfSalt to be an ArrayBuffer");if(typeof t.hkdfInfo!="object")throw new TypeError("Expected input of options.hkdfInfo to be an ArrayBuffer");if(typeof t.cipher!="string")throw new TypeError("Expected input of options.cipher to be a String");if(typeof t.length!="number")throw new TypeError("Expected input of options.length to be a Number");if(typeof t.usages!="object")throw new TypeError("Expected input of options.usages to be an Array");if(typeof t.isExtractable!="boolean")throw new TypeError("Expected input of options.isExtractable to be a Boolean");m.deriveBits({name:"ECDH",namedCurve:e.algorithm.namedCurve,public:e},a,t.bitLength).then(l=>{m.importKey("raw",l,{name:"HKDF"},!1,["deriveKey"]).then(s=>{m.deriveKey({name:"HKDF",hash:{name:t.hkdfHash},salt:t.hkdfSalt,info:t.hkdfInfo},s,{name:t.cipher,length:t.length},t.isExtractable,t.usages).then(r=>{n(r)}).catch(r=>{o(r)})}).catch(s=>{o(s)})}).catch(l=>{o(l)})})}getSharedKey(a,e){return a=typeof a<"u"?a:256,typeof e>"u"&&(e={}),e.cipher=typeof e.cipher<"u"?e.cipher:"AES-GCM",e.usages=typeof e.usages<"u"?e.usages:["encrypt","decrypt","wrapKey","unwrapKey"],e.isExtractable=typeof e.isExtractable<"u"?e.isExtractable:!0,new Promise((t,n)=>{if(typeof a!="number")throw new TypeError("Expected input of length to be a Number");if(typeof e.cipher!="string")throw new TypeError("Expected input of options.cipher expected to be a String");if(typeof e.usages!="object")throw new TypeError("Expected input of options.usages to be an Array");if(typeof e.isExtractable!="boolean")throw new TypeError("Expected input of options.isExtractable expected to be a Boolean");m.generateKey({name:e.cipher,length:a},e.isExtractable,e.usages).then(o=>{t(o)}).catch(o=>{n(o)})})}encryptKey(a,e){const t=this;return new Promise((n,o)=>{if(Object.prototype.toString.call(a)!=="[object CryptoKey]")throw new TypeError("Expected input of wrappingKey to be a CryptoKey Object");if(Object.prototype.toString.call(e)!=="[object CryptoKey]")throw new TypeError("Expected input of key to be a CryptoKey Object");let l=null;switch(e.type){case"secret":l="raw";break;case"private":l="pkcs8";break;case"public":l="spki"}if(a.type==="secret"){let s=null;if(a.algorithm.name==="AES-GCM")s=q.getRandomValues(new Uint8Array(12));else if(a.algorithm.name==="AES-CBC")s=q.getRandomValues(new Uint8Array(16));else throw new TypeError("Cipher mode of the wrappingKey is not supported");m.wrapKey(l,e,a,{name:a.algorithm.name,iv:s,tagLength:128}).then(r=>{const i=t.arrayBufferToBase64(s)+t.arrayBufferToBase64(r);n(i)}).catch(r=>{o(r)})}else if(a.algorithm.name==="RSA-OAEP"){if(a.type!=="public")throw new TypeError("Expected input of wrappingKey to be a CryptoKey Object of type public");m.wrapKey(l,e,a,{name:"RSA-OAEP",hash:{name:a.algorithm.hash.name}}).then(s=>{const r=t.arrayBufferToBase64(s);n(r)}).catch(s=>{o(s)})}else throw new TypeError("Expected input of wrappingKey is not a supported key")})}decryptKey(a,e,t){const n=this;return typeof t>"u"&&(t={}),t.name=typeof t.name<"u"?t.name:"AES-GCM",t.isExtractable=typeof t.isExtractable<"u"?t.isExtractable:!0,new Promise((o,l)=>{if(Object.prototype.toString.call(a)!=="[object CryptoKey]")throw new TypeError("Expected input of unwrappingKey to be a CryptoKey Object");if(typeof e!="string")throw new TypeError("Expected input of encryptedKey to be a Base64 String");if(typeof t.name!="string")throw new TypeError("Expected input of options.name to be a String");if(typeof t.isExtractable!="boolean")throw new TypeError("Expected input of options.isExtractable to be a Boolean");const s={};if(s.name=t.name,t.name==="AES-GCM"||t.name==="AES-CBC"){if(t.type=typeof t.type<"u"?t.type:"raw",t.length=typeof t.length<"u"?t.length:256,t.usages=typeof t.usages<"u"?t.usages:["encrypt","decrypt","wrapKey","unwrapKey"],typeof t.length!="number")throw new TypeError("Expected input of options.length to be a Number")}else if(t.name==="ECDH"){if(t.type=typeof t.type<"u"?t.type:"pkcs8",t.namedCurve=typeof t.namedCurve<"u"?t.namedCurve:"P-256",t.usages=typeof t.usages<"u"?t.usages:["deriveKey","deriveBits"],typeof t.namedCurve!="string")throw new TypeError("Expected input of options.namedCurve to be a String");s.namedCurve=t.namedCurve}else if(t.name==="ECDSA"){if(t.type=typeof t.type<"u"?t.type:"pkcs8",t.namedCurve=typeof t.namedCurve<"u"?t.namedCurve:"P-256",t.usages=typeof t.usages<"u"?t.usages:["sign"],typeof t.namedCurve!="string")throw new TypeError("Expected input of options.namedCurve to be a String");s.namedCurve=t.namedCurve}else if(t.name==="RSA-OAEP"){if(t.type=typeof t.type<"u"?t.type:"pkcs8",t.hash=typeof t.hash<"u"?t.hash:"SHA-512",t.usages=typeof t.usages<"u"?t.usages:["decrypt","unwrapKey"],typeof t.hash!="string")throw new TypeError("Expected input of options.hash to be a String");s.hash={},s.hash.name=t.hash}else if(t.name==="RSA-PSS"){if(t.type=typeof t.type<"u"?t.type:"pkcs8",t.hash=typeof t.hash<"u"?t.hash:"SHA-512",t.usages=typeof t.usages<"u"?t.usages:["sign"],typeof t.hash!="string")throw new TypeError("Expected input of options.hash to be a String");s.hash={},s.hash.name=t.hash}else throw new TypeError("Expected input of options.name is not a valid algorithm name");if(typeof t.type!="string")throw new TypeError("Expected input of options.type to be a String");if(typeof t.usages!="object")throw new TypeError("Expected input of options.usages to be an Array");if(a.type==="secret"){let r=null,i=null;if(a.algorithm.name==="AES-GCM")r=e.substring(0,16),i=e.substring(16);else if(a.algorithm.name==="AES-CBC")r=e.substring(0,24),i=e.substring(24);else throw new TypeError("Cipher mode of the wrappingKey is not supported");const u=n.base64ToArrayBuffer(r),c=n.base64ToArrayBuffer(i);m.unwrapKey(t.type,c,a,{name:a.algorithm.name,iv:u,tagLength:128},s,t.isExtractable,t.usages).then(f=>{o(f)}).catch(f=>{l(f)})}else if(a.algorithm.name==="RSA-OAEP"){if(a.type!=="private")throw new TypeError("Expected input of unwrappingKey to be a CryptoKey Object of type private");const r=n.base64ToArrayBuffer(e);m.unwrapKey(t.type,r,a,{name:"RSA-OAEP",modulusLength:a.algorithm.modulusLength,publicExponent:new Uint8Array([1,0,1]),hash:{name:a.algorithm.hash.name}},s,t.isExtractable,t.usages).then(i=>{o(i)}).catch(i=>{l(i)})}else throw new TypeError("Expected input of unwrappingKey is not a supported key")})}signKey(a,e,t){const n=this;return typeof t>"u"&&(t={}),new Promise((o,l)=>{if(Object.prototype.toString.call(a)!=="[object CryptoKey]"&&a.type!=="private")throw new TypeError("Expected input of privateKey to be a CryptoKey Object of type private");if(Object.prototype.toString.call(e)!=="[object CryptoKey]")throw new TypeError("Expected input of key to be a CryptoKey Object");m.exportKey("raw",e).then(s=>{if(a.algorithm.name==="ECDSA"){if(t.hash=typeof t.hash<"u"?t.hash:"SHA-512",typeof t.hash!="string")throw new TypeError("Expected input of options.hash to be a String");m.sign({name:"ECDSA",hash:{name:t.hash}},a,s).then(r=>{const i=n.arrayBufferToBase64(r);o(i)}).catch(r=>{l(r)})}else if(a.algorithm.name==="RSA-PSS"){if(t.saltLength=typeof t.saltLength<"u"?t.saltLength:128,typeof t.saltLength!="number")throw new TypeError("Expected input of options.saltLength to be a Number");m.sign({name:"RSA-PSS",saltLength:t.saltLength},a,s).then(r=>{const i=n.arrayBufferToBase64(r);o(i)}).catch(r=>{l(r)})}else throw new TypeError("Expected input of privateKey is not a valid private key")}).catch(s=>{l(s)})})}verifyKey(a,e,t,n){const o=this;return typeof n>"u"&&(n={}),new Promise((l,s)=>{if(Object.prototype.toString.call(a)!=="[object CryptoKey]"&&a.type!=="public")throw new TypeError("Expected input of publicKey to be a CryptoKey Object of type public");if(Object.prototype.toString.call(e)!=="[object CryptoKey]")throw new TypeError("Expected input of key to be a CryptoKey Object");if(typeof t!="string")throw new TypeError("Expected input of signature to be a Base64 String");const r=o.base64ToArrayBuffer(t);m.exportKey("raw",e).then(i=>{if(a.algorithm.name==="ECDSA"){if(n.hash=typeof n.hash<"u"?n.hash:"SHA-512",typeof n.hash!="string")throw new TypeError("Expected input of options.hash to be a String");m.verify({name:"ECDSA",hash:{name:n.hash}},a,r,i).then(u=>{l(u)}).catch(u=>{s(u)})}else if(a.algorithm.name==="RSA-PSS")m.verify({name:"RSA-PSS",saltLength:128},a,r,i).then(u=>{l(u)}).catch(u=>{s(u)});else throw new TypeError("Expected input of publicKey is not a valid public key")}).catch(i=>{s(i)})})}sign(a,e,t){const n=this;return typeof t>"u"&&(t={}),new Promise((o,l)=>{if(Object.prototype.toString.call(a)!=="[object CryptoKey]"&&a.type!=="private")throw new TypeError("Expected input of privateKey to be a CryptoKey Object of type private");if(typeof e!="object")throw new TypeError("Expected input of data to be an ArrayBuffer");if(a.algorithm.name==="ECDSA"){if(t.hash=typeof t.hash<"u"?t.hash:"SHA-512",typeof t.hash!="string")throw new TypeError("Expected input of options.hash to be a String");m.sign({name:"ECDSA",hash:{name:t.hash}},a,e).then(s=>{const r=n.arrayBufferToBase64(s);o(r)}).catch(s=>{l(s)})}else if(a.algorithm.name==="RSA-PSS"){if(t.saltLength=typeof t.saltLength<"u"?t.saltLength:128,typeof t.saltLength!="number")throw new TypeError("Expected input of options.saltLength to be a Number");m.sign({name:"RSA-PSS",saltLength:t.saltLength},a,e).then(s=>{const r=n.arrayBufferToBase64(s);o(r)}).catch(s=>{l(s)})}else throw new TypeError("Expected input of privateKey is not a valid private key")})}verify(a,e,t,n){const o=this;return typeof n>"u"&&(n={}),new Promise((l,s)=>{if(Object.prototype.toString.call(a)!=="[object CryptoKey]"&&a.type!=="public")throw new TypeError("Expected input of publicKey to be a CryptoKey Object of type public");if(typeof e!="object")throw new TypeError("Expected input of data to be an ArrayBuffer");if(typeof t!="string")throw new TypeError("Expected input of signature to be a Base64 String");const r=o.base64ToArrayBuffer(t);if(a.algorithm.name==="ECDSA"){if(n.hash=typeof n.hash<"u"?n.hash:"SHA-512",typeof n.hash!="string")throw new TypeError("Expected input of options.hash to be a String");m.verify({name:"ECDSA",hash:{name:n.hash}},a,r,e).then(i=>{l(i)}).catch(i=>{s(i)})}else if(a.algorithm.name==="RSA-PSS")m.verify({name:"RSA-PSS",saltLength:128},a,r,e).then(i=>{l(i)}).catch(i=>{s(i)});else throw new TypeError("Expected input of publicKey is not a valid public key")})}encrypt(a,e){const t=this;return new Promise((n,o)=>{if(Object.prototype.toString.call(a)!=="[object CryptoKey]"&&a.type!=="secret")throw new TypeError("Expected input of sharedKey to be a CryptoKey Object");if(typeof e!="object")throw new TypeError("Expected input of data to be an ArrayBuffer");let l=null;if(a.algorithm.name==="AES-GCM")l=q.getRandomValues(new Uint8Array(12));else if(a.algorithm.name==="AES-CBC")l=q.getRandomValues(new Uint8Array(16));else throw new TypeError("Cipher mode of the sharedKey is not supported");m.encrypt({name:a.algorithm.name,iv:l,tagLength:128},a,e).then(s=>{const r=t.arrayBufferToBase64(l),i=t.arrayBufferToBase64(s);n(r+i)}).catch(s=>{o(s)})})}decrypt(a,e,t){const n=this;return typeof t>"u"&&(t={}),t.cipher=typeof t.cipher<"u"?t.cipher:"AES-GCM",new Promise((o,l)=>{if(Object.prototype.toString.call(a)!=="[object CryptoKey]"&&a.type!=="secret")throw new TypeError("Expected input of sharedKey to be a CryptoKey Object");if(typeof e!="string")throw new TypeError("Expected input of encryptedData to be a String");if(typeof t.cipher!="string")throw new TypeError("Expected input of options.cipher to be a String");let s=null,r=null;if(t.cipher==="AES-GCM")s=e.substring(0,16),r=e.substring(16);else if(t.cipher==="AES-CBC")s=e.substring(0,24),r=e.substring(24);else throw new TypeError("Cipher mode of the sharedKey is not supported");const i=n.base64ToArrayBuffer(s),u=n.base64ToArrayBuffer(r);m.decrypt({name:t.cipher,iv:i,tagLength:128},a,u).then(c=>{o(c)}).catch(c=>{l(c)})})}derivePassphraseKey(a,e,t,n){const o=this;return t=typeof t<"u"?t:64e3,typeof n>"u"&&(n={}),n.hash=typeof n.hash<"u"?n.hash:"SHA-512",n.length=typeof n.length<"u"?n.length:256,n.cipher=typeof n.cipher<"u"?n.cipher:"AES-GCM",n.usages=typeof n.usages<"u"?n.usages:["encrypt","decrypt","wrapKey","unwrapKey"],n.isExtractable=typeof n.isExtractable<"u"?n.isExtractable:!0,new Promise((l,s)=>{if(typeof a!="string")throw new TypeError("Expected input of passphrase to be a String");if(typeof e!="object")throw new TypeError("Expected input of salt to be an ArrayBuffer");if(typeof t!="number")throw new TypeError("Expected input of iterations to be a Number");if(typeof n.hash!="string")throw new TypeError("Expected input of options.hash to be a String");if(typeof n.length!="number")throw new TypeError("Expected input of options.length to be a Number");if(typeof n.cipher!="string")throw new TypeError("Expected input of options.cipher to be a String");if(typeof n.usages!="object")throw new TypeError("Expected input of options.usages to be an Array");if(typeof n.isExtractable!="boolean")throw new TypeError("Expected input of options.isExtractable to be a Boolean");const r=o.stringToArrayBuffer(a);m.importKey("raw",r,{name:"PBKDF2"},!1,["deriveKey"]).then(i=>{m.deriveKey({name:"PBKDF2",salt:e,iterations:t,hash:{name:n.hash}},i,{name:n.cipher,length:n.length},n.isExtractable,n.usages).then(u=>{l(u)}).catch(u=>{s(u)})}).catch(i=>{s(i)})})}hashPassphrase(a,e,t,n){const o=this;return t=typeof t<"u"?t:64e3,typeof n>"u"&&(n={}),n.hash=typeof n.hash<"u"?n.hash:"SHA-512",n.length=typeof n.length<"u"?n.length:256,n.cipher=typeof n.cipher<"u"?n.cipher:"AES-GCM",n.usages=typeof n.usages<"u"?n.usages:["encrypt","decrypt","wrapKey","unwrapKey"],n.isExtractable=typeof n.isExtractable<"u"?n.isExtractable:!0,new Promise((l,s)=>{if(typeof a!="string")throw new TypeError("Expected input of passphrase to be a String");if(typeof e!="object")throw new TypeError("Expected input of salt to be an ArrayBuffer");if(typeof t!="number")throw new TypeError("Expected input of iterations to be a Number");if(typeof n.hash!="string")throw new TypeError("Expected input of options.hash to be a String");if(typeof n.length!="number")throw new TypeError("Expected input of options.length to be a Number");if(typeof n.cipher!="string")throw new TypeError("Expected input of options.cipher to be a String");if(typeof n.usages!="object")throw new TypeError("Expected input of options.usages to be an Array");if(typeof n.isExtractable!="boolean")throw new TypeError("Expected input of options.isExtractable to be a Boolean");o.derivePassphraseKey(a,e,t,n).then(r=>{m.exportKey("raw",r).then(i=>{const u=o.arrayBufferToHexString(i);l(u)}).catch(i=>{s(i)})}).catch(r=>{s(r)})})}getFingerprint(a,e){const t=this;return typeof e>"u"&&(e={}),e.hash=typeof hash<"u"?hash:"SHA-512",e.isBuffer=typeof e.isBuffer<"u"?e.isBuffer:!1,new Promise((n,o)=>{if(Object.prototype.toString.call(a)!=="[object CryptoKey]")throw new TypeError("Expected input of key to be a CryptoKey Object");if(typeof e.hash!="string")throw new TypeError("Expected input of options.hash to be a String");if(typeof e.isBuffer!="boolean")throw new TypeError("Expected input of options.isBuffer to be a Boolean");let l=null;switch(a.type){case"secret":l="raw";break;case"private":l="pkcs8";break;case"public":l="spki"}m.exportKey(l,a).then(s=>{m.digest({name:e.hash},s).then(r=>{if(e.isBuffer)n(r);else{const i=t.arrayBufferToHexString(r);n(i)}}).catch(r=>{o(r)})}).catch(s=>{o(s)})})}getRandomBytes(a){return a=typeof a<"u"?a:16,new Promise((e,t)=>{if(typeof a!="number")throw new TypeError("Expected input of size to be a Number");const n=q.getRandomValues(new Uint8Array(a));e(n)})}}var te={exports:{}},tt=te.exports,Le;function rt(){return Le||(Le=1,function(p){(function(a,e,t){function n(r){var i=this,u=s();i.next=function(){var c=2091639*i.s0+i.c*23283064365386963e-26;return i.s0=i.s1,i.s1=i.s2,i.s2=c-(i.c=c|0)},i.c=1,i.s0=u(" "),i.s1=u(" "),i.s2=u(" "),i.s0-=u(r),i.s0<0&&(i.s0+=1),i.s1-=u(r),i.s1<0&&(i.s1+=1),i.s2-=u(r),i.s2<0&&(i.s2+=1),u=null}function o(r,i){return i.c=r.c,i.s0=r.s0,i.s1=r.s1,i.s2=r.s2,i}function l(r,i){var u=new n(r),c=i&&i.state,f=u.next;return f.int32=function(){return u.next()*4294967296|0},f.double=function(){return f()+(f()*2097152|0)*11102230246251565e-32},f.quick=f,c&&(typeof c=="object"&&o(c,u),f.state=function(){return o(u,{})}),f}function s(){var r=4022871197,i=function(u){u=String(u);for(var c=0;c<u.length;c++){r+=u.charCodeAt(c);var f=.02519603282416938*r;r=f>>>0,f-=r,f*=r,r=f>>>0,f-=r,r+=f*4294967296}return(r>>>0)*23283064365386963e-26};return i}e&&e.exports?e.exports=l:this.alea=l})(tt,p)}(te)),te.exports}var re={exports:{}},at=re.exports,Ue;function nt(){return Ue||(Ue=1,function(p){(function(a,e,t){function n(s){var r=this,i="";r.x=0,r.y=0,r.z=0,r.w=0,r.next=function(){var c=r.x^r.x<<11;return r.x=r.y,r.y=r.z,r.z=r.w,r.w^=r.w>>>19^c^c>>>8},s===(s|0)?r.x=s:i+=s;for(var u=0;u<i.length+64;u++)r.x^=i.charCodeAt(u)|0,r.next()}function o(s,r){return r.x=s.x,r.y=s.y,r.z=s.z,r.w=s.w,r}function l(s,r){var i=new n(s),u=r&&r.state,c=function(){return(i.next()>>>0)/4294967296};return c.double=function(){do var f=i.next()>>>11,d=(i.next()>>>0)/4294967296,y=(f+d)/(1<<21);while(y===0);return y},c.int32=i.next,c.quick=c,u&&(typeof u=="object"&&o(u,i),c.state=function(){return o(i,{})}),c}e&&e.exports?e.exports=l:this.xor128=l})(at,p)}(re)),re.exports}var ae={exports:{}},st=ae.exports,$e;function ot(){return $e||($e=1,function(p){(function(a,e,t){function n(s){var r=this,i="";r.next=function(){var c=r.x^r.x>>>2;return r.x=r.y,r.y=r.z,r.z=r.w,r.w=r.v,(r.d=r.d+362437|0)+(r.v=r.v^r.v<<4^(c^c<<1))|0},r.x=0,r.y=0,r.z=0,r.w=0,r.v=0,s===(s|0)?r.x=s:i+=s;for(var u=0;u<i.length+64;u++)r.x^=i.charCodeAt(u)|0,u==i.length&&(r.d=r.x<<10^r.x>>>4),r.next()}function o(s,r){return r.x=s.x,r.y=s.y,r.z=s.z,r.w=s.w,r.v=s.v,r.d=s.d,r}function l(s,r){var i=new n(s),u=r&&r.state,c=function(){return(i.next()>>>0)/4294967296};return c.double=function(){do var f=i.next()>>>11,d=(i.next()>>>0)/4294967296,y=(f+d)/(1<<21);while(y===0);return y},c.int32=i.next,c.quick=c,u&&(typeof u=="object"&&o(u,i),c.state=function(){return o(i,{})}),c}e&&e.exports?e.exports=l:this.xorwow=l})(st,p)}(ae)),ae.exports}var ne={exports:{}},it=ne.exports,qe;function lt(){return qe||(qe=1,function(p){(function(a,e,t){function n(s){var r=this;r.next=function(){var u=r.x,c=r.i,f,d;return f=u[c],f^=f>>>7,d=f^f<<24,f=u[c+1&7],d^=f^f>>>10,f=u[c+3&7],d^=f^f>>>3,f=u[c+4&7],d^=f^f<<7,f=u[c+7&7],f=f^f<<13,d^=f^f<<9,u[c]=d,r.i=c+1&7,d};function i(u,c){var f,d=[];if(c===(c|0))d[0]=c;else for(c=""+c,f=0;f<c.length;++f)d[f&7]=d[f&7]<<15^c.charCodeAt(f)+d[f+1&7]<<13;for(;d.length<8;)d.push(0);for(f=0;f<8&&d[f]===0;++f);for(f==8?d[7]=-1:d[f],u.x=d,u.i=0,f=256;f>0;--f)u.next()}i(r,s)}function o(s,r){return r.x=s.x.slice(),r.i=s.i,r}function l(s,r){s==null&&(s=+new Date);var i=new n(s),u=r&&r.state,c=function(){return(i.next()>>>0)/4294967296};return c.double=function(){do var f=i.next()>>>11,d=(i.next()>>>0)/4294967296,y=(f+d)/(1<<21);while(y===0);return y},c.int32=i.next,c.quick=c,u&&(u.x&&o(u,i),c.state=function(){return o(i,{})}),c}e&&e.exports?e.exports=l:this.xorshift7=l})(it,p)}(ne)),ne.exports}var se={exports:{}},ut=se.exports,Me;function ct(){return Me||(Me=1,function(p){(function(a,e,t){function n(s){var r=this;r.next=function(){var u=r.w,c=r.X,f=r.i,d,y;return r.w=u=u+1640531527|0,y=c[f+34&127],d=c[f=f+1&127],y^=y<<13,d^=d<<17,y^=y>>>15,d^=d>>>12,y=c[f]=y^d,r.i=f,y+(u^u>>>16)|0};function i(u,c){var f,d,y,A,P,g=[],h=128;for(c===(c|0)?(d=c,c=null):(c=c+"\0",d=0,h=Math.max(h,c.length)),y=0,A=-32;A<h;++A)c&&(d^=c.charCodeAt((A+32)%c.length)),A===0&&(P=d),d^=d<<10,d^=d>>>15,d^=d<<4,d^=d>>>13,A>=0&&(P=P+1640531527|0,f=g[A&127]^=d+P,y=f==0?y+1:0);for(y>=128&&(g[(c&&c.length||0)&127]=-1),y=127,A=4*128;A>0;--A)d=g[y+34&127],f=g[y=y+1&127],d^=d<<13,f^=f<<17,d^=d>>>15,f^=f>>>12,g[y]=d^f;u.w=P,u.X=g,u.i=y}i(r,s)}function o(s,r){return r.i=s.i,r.w=s.w,r.X=s.X.slice(),r}function l(s,r){s==null&&(s=+new Date);var i=new n(s),u=r&&r.state,c=function(){return(i.next()>>>0)/4294967296};return c.double=function(){do var f=i.next()>>>11,d=(i.next()>>>0)/4294967296,y=(f+d)/(1<<21);while(y===0);return y},c.int32=i.next,c.quick=c,u&&(u.X&&o(u,i),c.state=function(){return o(i,{})}),c}e&&e.exports?e.exports=l:this.xor4096=l})(ut,p)}(se)),se.exports}var oe={exports:{}},ft=oe.exports,Ve;function dt(){return Ve||(Ve=1,function(p){(function(a,e,t){function n(s){var r=this,i="";r.next=function(){var c=r.b,f=r.c,d=r.d,y=r.a;return c=c<<25^c>>>7^f,f=f-d|0,d=d<<24^d>>>8^y,y=y-c|0,r.b=c=c<<20^c>>>12^f,r.c=f=f-d|0,r.d=d<<16^f>>>16^y,r.a=y-c|0},r.a=0,r.b=0,r.c=-1640531527,r.d=1367130551,s===Math.floor(s)?(r.a=s/4294967296|0,r.b=s|0):i+=s;for(var u=0;u<i.length+20;u++)r.b^=i.charCodeAt(u)|0,r.next()}function o(s,r){return r.a=s.a,r.b=s.b,r.c=s.c,r.d=s.d,r}function l(s,r){var i=new n(s),u=r&&r.state,c=function(){return(i.next()>>>0)/4294967296};return c.double=function(){do var f=i.next()>>>11,d=(i.next()>>>0)/4294967296,y=(f+d)/(1<<21);while(y===0);return y},c.int32=i.next,c.quick=c,u&&(typeof u=="object"&&o(u,i),c.state=function(){return o(i,{})}),c}e&&e.exports?e.exports=l:this.tychei=l})(ft,p)}(oe)),oe.exports}var ie={exports:{}},pt=ie.exports,Ge;function ht(){return Ge||(Ge=1,function(p){(function(a,e,t){var n=256,o=6,l=52,s="random",r=t.pow(n,o),i=t.pow(2,l),u=i*2,c=n-1,f;function d(b,E,B){var v=[];E=E==!0?{entropy:!0}:E||{};var C=g(P(E.entropy?[b,T(e)]:b??h(),3),v),_=new y(v),I=function(){for(var j=_.g(o),U=r,K=0;j<i;)j=(j+K)*n,U*=n,K=_.g(1);for(;j>=u;)j/=2,U/=2,K>>>=1;return(j+K)/U};return I.int32=function(){return _.g(4)|0},I.quick=function(){return _.g(4)/4294967296},I.double=I,g(T(_.S),e),(E.pass||B||function(j,U,K,$){return $&&($.S&&A($,_),j.state=function(){return A(_,{})}),K?(t[s]=j,U):j})(I,C,"global"in E?E.global:this==t,E.state)}function y(b){var E,B=b.length,v=this,C=0,_=v.i=v.j=0,I=v.S=[];for(B||(b=[B++]);C<n;)I[C]=C++;for(C=0;C<n;C++)I[C]=I[_=c&_+b[C%B]+(E=I[C])],I[_]=E;(v.g=function(j){for(var U,K=0,$=v.i,F=v.j,L=v.S;j--;)U=L[$=c&$+1],K=K*n+L[c&(L[$]=L[F=c&F+U])+(L[F]=U)];return v.i=$,v.j=F,K})(n)}function A(b,E){return E.i=b.i,E.j=b.j,E.S=b.S.slice(),E}function P(b,E){var B=[],v=typeof b,C;if(E&&v=="object")for(C in b)try{B.push(P(b[C],E-1))}catch{}return B.length?B:v=="string"?b:b+"\0"}function g(b,E){for(var B=b+"",v,C=0;C<B.length;)E[c&C]=c&(v^=E[c&C]*19)+B.charCodeAt(C++);return T(E)}function h(){try{var b;return f&&(b=f.randomBytes)?b=b(n):(b=new Uint8Array(n),(a.crypto||a.msCrypto).getRandomValues(b)),T(b)}catch{var E=a.navigator,B=E&&E.plugins;return[+new Date,a,B,a.screen,T(e)]}}function T(b){return String.fromCharCode.apply(0,b)}if(g(t.random(),e),p.exports){p.exports=d;try{f=Ye}catch{}}else t["seed"+s]=d})(typeof self<"u"?self:pt,[],Math)}(ie)),ie.exports}var Ae,Fe;function yt(){if(Fe)return Ae;Fe=1;var p=rt(),a=nt(),e=ot(),t=lt(),n=ct(),o=dt(),l=ht();return l.alea=p,l.xor128=a,l.xorwow=e,l.xorshift7=t,l.xor4096=n,l.tychei=o,Ae=l,Ae}var gt=yt();const mt=Xe(gt),le=["ability","able","aboard","about","above","accept","accident","according","account","accurate","acres","across","act","action","active","activity","actual","actually","add","addition","additional","adjective","adult","adventure","advice","affect","afraid","after","afternoon","again","against","age","ago","agree","ahead","aid","air","airplane","alike","alive","all","allow","almost","alone","along","aloud","alphabet","already","also","although","am","among","amount","ancient","angle","angry","animal","announced","another","answer","ants","any","anybody","anyone","anything","anyway","anywhere","apart","apartment","appearance","apple","applied","appropriate","are","area","arm","army","around","arrange","arrangement","arrive","arrow","art","article","as","aside","ask","asleep","at","ate","atmosphere","atom","atomic","attached","attack","attempt","attention","audience","author","automobile","available","average","avoid","aware","away","baby","back","bad","badly","bag","balance","ball","balloon","band","bank","bar","bare","bark","barn","base","baseball","basic","basis","basket","bat","battle","be","bean","bear","beat","beautiful","beauty","became","because","become","becoming","bee","been","before","began","beginning","begun","behavior","behind","being","believed","bell","belong","below","belt","bend","beneath","bent","beside","best","bet","better","between","beyond","bicycle","bigger","biggest","bill","birds","birth","birthday","bit","bite","black","blank","blanket","blew","blind","block","blood","blow","blue","board","boat","body","bone","book","border","born","both","bottle","bottom","bound","bow","bowl","box","boy","brain","branch","brass","brave","bread","break","breakfast","breath","breathe","breathing","breeze","brick","bridge","brief","bright","bring","broad","broke","broken","brother","brought","brown","brush","buffalo","build","building","built","buried","burn","burst","bus","bush","business","busy","but","butter","buy","by","cabin","cage","cake","call","calm","came","camera","camp","can","canal","cannot","cap","capital","captain","captured","car","carbon","card","care","careful","carefully","carried","carry","case","cast","castle","cat","catch","cattle","caught","cause","cave","cell","cent","center","central","century","certain","certainly","chain","chair","chamber","chance","change","changing","chapter","character","characteristic","charge","chart","check","cheese","chemical","chest","chicken","chief","child","children","choice","choose","chose","chosen","church","circle","circus","citizen","city","class","classroom","claws","clay","clean","clear","clearly","climate","climb","clock","close","closely","closer","cloth","clothes","clothing","cloud","club","coach","coal","coast","coat","coffee","cold","collect","college","colony","color","column","combination","combine","come","comfortable","coming","command","common","community","company","compare","compass","complete","completely","complex","composed","composition","compound","concerned","condition","congress","connected","consider","consist","consonant","constantly","construction","contain","continent","continued","contrast","control","conversation","cook","cookies","cool","copper","copy","corn","corner","correct","correctly","cost","cotton","could","count","country","couple","courage","course","court","cover","cow","cowboy","crack","cream","create","creature","crew","crop","cross","crowd","cry","cup","curious","current","curve","customs","cut","cutting","daily","damage","dance","danger","dangerous","dark","darkness","date","daughter","dawn","day","dead","deal","dear","death","decide","declared","deep","deeply","deer","definition","degree","depend","depth","describe","desert","design","desk","detail","determine","develop","development","diagram","diameter","did","die","differ","difference","different","difficult","difficulty","dig","dinner","direct","direction","directly","dirt","dirty","disappear","discover","discovery","discuss","discussion","disease","dish","distance","distant","divide","division","do","doctor","does","dog","doing","doll","dollar","done","donkey","door","dot","double","doubt","down","dozen","draw","drawn","dream","dress","drew","dried","drink","drive","driven","driver","driving","drop","dropped","drove","dry","duck","due","dug","dull","during","dust","duty","each","eager","ear","earlier","early","earn","earth","easier","easily","east","easy","eat","eaten","edge","education","effect","effort","egg","eight","either","electric","electricity","element","elephant","eleven","else","empty","end","enemy","energy","engine","engineer","enjoy","enough","enter","entire","entirely","environment","equal","equally","equator","equipment","escape","especially","essential","establish","even","evening","event","eventually","ever","every","everybody","everyone","everything","everywhere","evidence","exact","exactly","examine","example","excellent","except","exchange","excited","excitement","exciting","exclaimed","exercise","exist","expect","experience","experiment","explain","explanation","explore","express","expression","extra","eye","face","facing","fact","factor","factory","failed","fair","fairly","fall","fallen","familiar","family","famous","far","farm","farmer","farther","fast","fastened","faster","fat","father","favorite","fear","feathers","feature","fed","feed","feel","feet","fell","fellow","felt","fence","few","fewer","field","fierce","fifteen","fifth","fifty","fight","fighting","figure","fill","film","final","finally","find","fine","finest","finger","finish","fire","fireplace","firm","first","fish","five","fix","flag","flame","flat","flew","flies","flight","floating","floor","flow","flower","fly","fog","folks","follow","food","foot","football","for","force","foreign","forest","forget","forgot","forgotten","form","former","fort","forth","forty","forward","fought","found","four","fourth","fox","frame","free","freedom","frequently","fresh","friend","friendly","frighten","frog","from","front","frozen","fruit","fuel","full","fully","fun","function","funny","fur","furniture","further","future","gain","game","garage","garden","gas","gasoline","gate","gather","gave","general","generally","gentle","gently","get","getting","giant","gift","girl","give","given","giving","glad","glass","globe","go","goes","gold","golden","gone","good","goose","got","government","grabbed","grade","gradually","grain","grandfather","grandmother","graph","grass","gravity","gray","great","greater","greatest","greatly","green","grew","ground","group","grow","grown","growth","guard","guess","guide","gulf","gun","habit","had","hair","half","halfway","hall","hand","handle","handsome","hang","happen","happened","happily","happy","harbor","hard","harder","hardly","has","hat","have","having","hay","he","headed","heading","health","heard","hearing","heart","heat","heavy","height","held","hello","help","helpful","her","herd","here","herself","hidden","hide","high","higher","highest","highway","hill","him","himself","his","history","hit","hold","hole","hollow","home","honor","hope","horn","horse","hospital","hot","hour","house","how","however","huge","human","hundred","hung","hungry","hunt","hunter","hurried","hurry","hurt","husband","ice","idea","identity","if","ill","image","imagine","immediately","importance","important","impossible","improve","in","inch","include","including","income","increase","indeed","independent","indicate","individual","industrial","industry","influence","information","inside","instance","instant","instead","instrument","interest","interior","into","introduced","invented","involved","iron","is","island","it","its","itself","jack","jar","jet","job","join","joined","journey","joy","judge","jump","jungle","just","keep","kept","key","kids","kill","kind","kitchen","knew","knife","know","knowledge","known","label","labor","lack","lady","laid","lake","lamp","land","language","large","larger","largest","last","late","later","laugh","law","lay","layers","lead","leader","leaf","learn","least","leather","leave","leaving","led","left","leg","length","lesson","let","letter","level","library","lie","life","lift","light","like","likely","limited","line","lion","lips","liquid","list","listen","little","live","living","load","local","locate","location","log","lonely","long","longer","look","loose","lose","loss","lost","lot","loud","love","lovely","low","lower","luck","lucky","lunch","lungs","lying","machine","machinery","mad","made","magic","magnet","mail","main","mainly","major","make","making","man","managed","manner","manufacturing","many","map","mark","market","married","mass","massage","master","material","mathematics","matter","may","maybe","me","meal","mean","means","meant","measure","meat","medicine","meet","melted","member","memory","men","mental","merely","met","metal","method","mice","middle","might","mighty","mile","military","milk","mill","mind","mine","minerals","minute","mirror","missing","mission","mistake","mix","mixture","model","modern","molecular","moment","money","monkey","month","mood","moon","more","morning","most","mostly","mother","motion","motor","mountain","mouse","mouth","move","movement","movie","moving","mud","muscle","music","musical","must","my","myself","mysterious","nails","name","nation","national","native","natural","naturally","nature","near","nearby","nearer","nearest","nearly","necessary","neck","needed","needle","needs","negative","neighbor","neighborhood","nervous","nest","never","new","news","newspaper","next","nice","night","nine","no","nobody","nodded","noise","none","noon","nor","north","nose","not","note","noted","nothing","notice","noun","now","number","numeral","nuts","object","observe","obtain","occasionally","occur","ocean","of","off","offer","office","officer","official","oil","old","older","oldest","on","once","one","only","onto","open","operation","opinion","opportunity","opposite","or","orange","orbit","order","ordinary","organization","organized","origin","original","other","ought","our","ourselves","out","outer","outline","outside","over","own","owner","oxygen","pack","package","page","paid","pain","paint","pair","palace","pale","pan","paper","paragraph","parallel","parent","park","part","particles","particular","particularly","partly","parts","party","pass","passage","past","path","pattern","pay","peace","pen","pencil","people","per","percent","perfect","perfectly","perhaps","period","person","personal","pet","phrase","physical","piano","pick","picture","pictured","pie","piece","pig","pile","pilot","pine","pink","pipe","pitch","place","plain","plan","plane","planet","planned","planning","plant","plastic","plate","plates","play","pleasant","please","pleasure","plenty","plural","plus","pocket","poem","poet","poetry","point","pole","police","policeman","political","pond","pony","pool","poor","popular","population","porch","port","position","positive","possible","possibly","post","pot","potatoes","pound","pour","powder","power","powerful","practical","practice","prepare","present","president","press","pressure","pretty","prevent","previous","price","pride","primitive","principal","principle","printed","private","prize","probably","problem","process","produce","product","production","program","progress","promised","proper","properly","property","protection","proud","prove","provide","public","pull","pupil","pure","purple","purpose","push","put","putting","quarter","queen","question","quick","quickly","quiet","quietly","quite","rabbit","race","radio","railroad","rain","raise","ran","ranch","range","rapidly","rate","rather","raw","rays","reach","read","reader","ready","real","realize","rear","reason","recall","receive","recent","recently","recognize","record","red","refer","refused","region","regular","related","relationship","religious","remain","remarkable","remember","remove","repeat","replace","replied","report","represent","require","research","respect","rest","result","return","review","rhyme","rhythm","rice","rich","ride","riding","right","ring","rise","rising","river","road","roar","rock","rocket","rocky","rod","roll","roof","room","root","rope","rose","rough","round","route","row","rubbed","rubber","rule","ruler","run","running","rush","sad","saddle","safe","safety","said","sail","sale","salmon","salt","same","sand","sang","sat","satellites","satisfied","save","saved","saw","say","scale","scared","scene","school","science","scientific","scientist","score","screen","sea","search","season","seat","second","secret","section","see","seed","seeing","seems","seen","seldom","select","selection","sell","send","sense","sent","sentence","separate","series","serious","serve","service","sets","setting","settle","settlers","seven","several","shade","shadow","shake","shaking","shall","shallow","shape","share","sharp","she","sheep","sheet","shelf","shells","shelter","shine","shinning","ship","shirt","shoe","shoot","shop","shore","short","shorter","shot","should","shoulder","shout","show","shown","shut","sick","sides","sight","sign","signal","silence","silent","silk","silly","silver","similar","simple","simplest","simply","since","sing","single","sink","sister","sit","sitting","situation","six","size","skill","skin","sky","slabs","slave","sleep","slept","slide","slight","slightly","slip","slipped","slope","slow","slowly","small","smaller","smallest","smell","smile","smoke","smooth","snake","snow","so","soap","social","society","soft","softly","soil","solar","sold","soldier","solid","solution","solve","some","somebody","somehow","someone","something","sometime","somewhere","son","song","soon","sort","sound","source","south","southern","space","speak","special","species","specific","speech","speed","spell","spend","spent","spider","spin","spirit","spite","split","spoken","sport","spread","spring","square","stage","stairs","stand","standard","star","stared","start","state","statement","station","stay","steady","steam","steel","steep","stems","step","stepped","stick","stiff","still","stock","stomach","stone","stood","stop","stopped","store","storm","story","stove","straight","strange","stranger","straw","stream","street","strength","stretch","strike","string","strip","strong","stronger","struck","structure","struggle","stuck","student","studied","studying","subject","substance","success","successful","such","sudden","suddenly","sugar","suggest","suit","sum","summer","sun","sunlight","supper","supply","support","suppose","sure","surface","surprise","surrounded","swam","sweet","swept","swim","swimming","swing","swung","syllable","symbol","system","table","tail","take","taken","tales","talk","tall","tank","tape","task","taste","taught","tax","tea","teach","teacher","team","tears","teeth","telephone","television","tell","temperature","ten","tent","term","terrible","test","than","thank","that","thee","them","themselves","then","theory","there","therefore","these","they","thick","thin","thing","think","third","thirty","this","those","thou","though","thought","thousand","thread","three","threw","throat","through","throughout","throw","thrown","thumb","thus","thy","tide","tie","tight","tightly","till","time","tin","tiny","tip","tired","title","to","tobacco","today","together","told","tomorrow","tone","tongue","tonight","too","took","tool","top","topic","torn","total","touch","toward","tower","town","toy","trace","track","trade","traffic","trail","train","transportation","trap","travel","treated","tree","triangle","tribe","trick","tried","trip","troops","tropical","trouble","truck","trunk","truth","try","tube","tune","turn","twelve","twenty","twice","two","type","typical","uncle","under","underline","understanding","unhappy","union","unit","universe","unknown","unless","until","unusual","up","upon","upper","upward","us","use","useful","using","usual","usually","valley","valuable","value","vapor","variety","various","vast","vegetable","verb","vertical","very","vessels","victory","view","village","visit","visitor","voice","volume","vote","vowel","voyage","wagon","wait","walk","wall","want","war","warm","warn","was","wash","waste","watch","water","wave","way","we","weak","wealth","wear","weather","week","weigh","weight","welcome","well","went","were","west","western","wet","whale","what","whatever","wheat","wheel","when","whenever","where","wherever","whether","which","while","whispered","whistle","white","who","whole","whom","whose","why","wide","widely","wife","wild","will","willing","win","wind","window","wing","winter","wire","wise","wish","with","within","without","wolf","women","won","wonder","wonderful","wood","wooden","wool","word","wore","work","worker","world","worried","worry","worse","worth","would","wrapped","write","writer","writing","written","wrong","wrote","yard","year","yellow","yes","yesterday","yet","you","young","younger","your","yourself","youth","zero","zebra","zipper","zoo","zulu"],Te=le.reduce((p,a)=>a.length<p.length?a:p).length,Ce=le.reduce((p,a)=>a.length>p.length?a:p).length;function bt(p){const a=p!=null&&p.seed?new mt(p.seed):null,{minLength:e,maxLength:t,...n}=p||{};function o(){let d=typeof e!="number"?Te:s(e);const y=typeof t!="number"?Ce:s(t);d>y&&(d=y);let A=!1,P;for(;!A;)P=l(),A=P.length<=y&&P.length>=d;return P}function l(){return le[r(le.length)]}function s(d){return d<Te&&(d=Te),d>Ce&&(d=Ce),d}function r(d){const y=a?a():Math.random();return Math.floor(y*d)}if(p===void 0)return o();if(typeof p=="number")p={exactly:p};else if(Object.keys(n).length===0)return o();p.exactly&&(p.min=p.exactly,p.max=p.exactly),typeof p.wordsPerString!="number"&&(p.wordsPerString=1),typeof p.formatter!="function"&&(p.formatter=d=>d),typeof p.separator!="string"&&(p.separator=" ");const i=p.min+r(p.max+1-p.min);let u=[],c="",f=0;for(let d=0;d<i*p.wordsPerString;d++)f===p.wordsPerString-1?c+=p.formatter(o(),f):c+=p.formatter(o(),f)+p.separator,f++,(d+1)%p.wordsPerString===0&&(u.push(c),c="",f=0);return typeof p.join=="string"&&(u=u.join(p.join)),u}class Qe{validatePassphrase(a){if(a!=null&&a.length<8)throw new Error("Passphrase must be at least 8 characters")}arrayBufferToHex(a){return Array.from(new Uint8Array(a)).map(e=>e.toString(16).padStart(2,"0")).join("")}hexToArrayBuffer(a){const e=new Uint8Array(a.length/2);for(let t=0;t<a.length;t+=2)e[t/2]=parseInt(a.slice(t,t+2),16);return e.buffer}async generateRandomString(a){const t=await new Se().getRandomBytes(a);return this.arrayBufferToHex(t)}generatePasssphrase(){return bt({exactly:8,join:"-"})}async encryptMessage(a,e=null){this.validatePassphrase(e);const t=new Se;e=e||this.generatePasssphrase();const n=await t.getRandomBytes(8),o=await t.derivePassphraseKey(e,n,64e3);var l=new TextEncoder;const s=await t.encrypt(o,l.encode(a)),r=this.arrayBufferToHex(n)+s;return{passphrase:e,secret:r}}async decryptMessage(a,e){try{this.validatePassphrase(e);const n=new Se,o=this.hexToArrayBuffer(a.slice(0,16));a=a.slice(16);const l=await n.derivePassphraseKey(e,o,64e3);var t=new TextDecoder;const s=await n.decrypt(l,a),r=t.decode(s);if((r==null?void 0:r.length)>0)return r;throw new Error}catch{throw new Error("Could not decrypt message. Password might be wrong. Message destroyed.")}}}const wt=["value","rows","placeholder"],Et={class:"flex flex-wrap"},xt={class:"ml-6"},vt={__name:"TextAreaInput",props:{modelValue:String,maxLength:{type:Number,default:0},rows:{type:Number,default:3},placeholder:{type:String,default:""},autofocus:{type:Boolean,default:!1}},emits:["update:modelValue"],setup(p,{expose:a}){const e=p,t=M(null),n=M(null);return ze(()=>{e.autofocus&&t.value.focus()}),a({focus:()=>t.value.focus()}),Q(()=>{}),(o,l)=>{var s,r,i,u,c,f,d,y,A,P;return x(),k("span",{onClick:l[1]||(l[1]=()=>t.value.focus()),ref_key:"base",ref:n,class:G({"relative ring-0 focus-within:ring-1 border-gray-300 dark:border-gray-700 dark:bg-gray-700 dark:text-gray-200 focus-within:border-gray-500 dark:focus-within:border-gray-600 focus-within:ring-gray-500 dark:focus-within:ring-gray-600 rounded-md shadow-sm":p.maxLength==0||((r=(s=t.value)==null?void 0:s.value)==null?void 0:r.length)<=p.maxLength,"text-red-500 relative border-red-300 dark:border-red-700 dark:bg-red-100 dark:text-red-200 focus:border-red-500 dark:focus:border-red-600 focus:ring-red-500 dark:focus:ring-red-600 rounded-md shadow-sm bg-red-50":p.maxLength>0&&((u=(i=t.value)==null?void 0:i.value)==null?void 0:u.length)>p.maxLength})},[w("textarea",{ref_key:"input",ref:t,class:G(["w-full border-0 focus:ring-0 -mt-2 -ml-2 -mr-2 mb-2 dark:bg-gray-700 dark:text-gray-200 placeholder-gray-400 dark:placeholder-gray-300",{"bg-red-50 dark:bg-red-100 text-red-500 dark:text-red-600":p.maxLength>0&&((f=(c=t.value)==null?void 0:c.value)==null?void 0:f.length)>p.maxLength}]),value:p.modelValue,rows:p.rows,placeholder:p.placeholder,onInput:l[0]||(l[0]=g=>o.$emit("update:modelValue",g.target.value))},null,42,wt),p.maxLength>0?(x(),k("div",{key:0,class:G(["absolute bottom-2 right-6 text-sm",{"text-red-500":((y=(d=t.value)==null?void 0:d.value)==null?void 0:y.length)>p.maxLength}])},[w("div",Et,[l[2]||(l[2]=w("svg",{xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 24 24",fill:"currentColor",class:"absolute size-4 ml-1 top-1"},[w("path",{"fill-rule":"evenodd",d:"M4.848 2.771A49.144 49.144 0 0 1 12 2.25c2.43 0 4.817.178 7.152.52 1.978.292 3.348 2.024 3.348 3.97v6.02c0 1.946-1.37 3.678-3.348 3.97a48.901 48.901 0 0 1-3.476.383.39.39 0 0 0-.297.17l-2.755 4.133a.75.75 0 0 1-1.248 0l-2.755-4.133a.39.39 0 0 0-.297-.17 48.9 48.9 0 0 1-3.476-.384c-1.978-.29-3.348-2.024-3.348-3.97V6.741c0-1.946 1.37-3.68 3.348-3.97ZM6.75 8.25a.75.75 0 0 1 .75-.75h9a.75.75 0 0 1 0 1.5h-9a.75.75 0 0 1-.75-.75Zm.75 2.25a.75.75 0 0 0 0 1.5H12a.75.75 0 0 0 0-1.5H7.5Z","clip-rule":"evenodd"})],-1)),w("span",xt,J(p.maxLength-((P=(A=t.value)==null?void 0:A.value)==null?void 0:P.length)),1)])],2)):H("",!0)],2)}}},St={class:"mt-5 md:mt-0 md:col-span-2 opacity-95"},At={class:"grid grid-cols-6 gap-6"},Tt={key:0,class:"flex items-center justify-end px-4 py-3 bg-gray-50 dark:bg-gray-800 text-end sm:px-6 shadow sm:rounded-bl-md sm:rounded-br-md"},Ct={__name:"FlatFormSection",emits:["submitted"],setup(p){const a=Q(()=>!!Ze().actions);return(e,t)=>(x(),k("div",St,[w("form",{onSubmit:t[0]||(t[0]=W(n=>e.$emit("submitted"),["prevent"]))},[w("div",{class:G(["px-4 py-5 bg-gray-50 dark:bg-gray-900 sm:p-6 shadow",a.value?"sm:rounded-tl-md sm:rounded-tr-md":"sm:rounded-md"])},[w("div",At,[Be(e.$slots,"form")])],2),a.value?(x(),k("div",Tt,[Be(e.$slots,"actions")])):H("",!0)],32)]))}},kt=["value"],Bt=["value"],Pt={__name:"SelectInput",props:{modelValue:String,options:Array},emits:["update:modelValue"],setup(p,{expose:a}){const e=M(null);return ze(()=>{e.value.hasAttribute("autofocus")&&e.value.focus()}),a({focus:()=>e.value.focus()}),(t,n)=>(x(),k("select",{ref_key:"input",ref:e,class:"border-gray-300 dark:border-gray-700 dark:bg-gray-700 dark:text-gray-200 focus:border-gray-500 dark:focus:border-gray-600 focus:ring-gray-500 dark:focus:ring-gray-600 rounded-md shadow-sm",value:p.modelValue,onInput:n[0]||(n[0]=o=>t.$emit("update:modelValue",o.target.value))},[(x(!0),k(We,null,Je(p.options,o=>(x(),k("option",{key:o,value:o.value},J(o.label),9,Bt))),128))],40,kt))}},Ot={class:"w-full"},_t={class:"relative"},Nt={key:0,id:"default-icon"},It={key:1,id:"success-icon",class:"inline-flex items-center"},ke={__name:"CodeBlock",props:{value:String},setup(p){const a=p,e=M(null),t=M(!1),n=o=>{navigator.clipboard.writeText(o),t.value=!0,setTimeout(()=>t.value=!1,1e3)};return(o,l)=>(x(),k("div",Ot,[w("div",_t,[l[3]||(l[3]=w("label",{for:"npm-install-copy-button",class:"sr-only"},"Label",-1)),w("code",{ref_key:"text",ref:e,class:"col-span-6 bg-gray-50 border border-gray-300 text-gray-500 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-gray-400 dark:focus:ring-blue-500 dark:focus:border-blue-500",disabled:"",readonly:""},[Be(o.$slots,"default",{},()=>[O(J(a.value),1)])],512),w("button",{type:"button",onClick:l[0]||(l[0]=W(s=>n(e.value.innerText),["prevent"])),"data-tooltip-target":"tooltip-copy-npm-install-copy-button",class:"absolute end-2 bottom-1 translate-y-1 text-gray-500 dark:text-gray-400 hover:bg-gray-100 dark:hover:bg-gray-800 rounded-lg p-1 mb-1 inline-flex items-center justify-center hover:text-gray-900 dark:hover:text-white"},[t.value?H("",!0):(x(),k("span",Nt,l[1]||(l[1]=[w("svg",{class:"w-3.5 h-3.5","aria-hidden":"true",xmlns:"http://www.w3.org/2000/svg",fill:"currentColor",viewBox:"0 0 18 20"},[w("path",{d:"M16 1h-3.278A1.992 1.992 0 0 0 11 0H7a1.993 1.993 0 0 0-1.722 1H2a2 2 0 0 0-2 2v15a2 2 0 0 0 2 2h14a2 2 0 0 0 2-2V3a2 2 0 0 0-2-2Zm-3 14H5a1 1 0 0 1 0-2h8a1 1 0 0 1 0 2Zm0-4H5a1 1 0 0 1 0-2h8a1 1 0 1 1 0 2Zm0-5H5a1 1 0 0 1 0-2h2V2h4v2h2a1 1 0 1 1 0 2Z"})],-1)]))),t.value?(x(),k("span",It,l[2]||(l[2]=[w("svg",{class:"w-3.5 h-3.5 text-blue-700 dark:text-blue-500","aria-hidden":"true",xmlns:"http://www.w3.org/2000/svg",fill:"none",viewBox:"0 0 16 12"},[w("path",{stroke:"currentColor","stroke-linecap":"round","stroke-linejoin":"round","stroke-width":"2",d:"M1 5.917 5.724 10.5 15 1.5"})],-1)]))):H("",!0)]),l[4]||(l[4]=w("div",{id:"tooltip-copy-npm-install-copy-button",role:"tooltip",class:"absolute z-10 invisible inline-block px-3 py-2 text-sm font-medium text-white transition-opacity duration-300 bg-gray-900 rounded-lg shadow-sm opacity-0 tooltip dark:bg-gray-700"},[w("span",{id:"default-tooltip-message"},"Copy to clipboard"),w("span",{id:"success-tooltip-message",class:"hidden"},"Copied!"),w("div",{class:"tooltip-arrow","data-popper-arrow":""})],-1))])]))}},Ht={class:"col-span-12"},Dt={key:0,class:"col-span-12"},jt={class:"col-span-12"},Rt={key:0},Kt={key:1},Lt={class:"flex flex-wrap mt-2 relative text-sm gap-2"},Ut={key:0,class:"flex flex-wrap gap-1"},$t={key:0},qt={key:1},Mt={key:2,class:"flex flex-wrap gap-1"},Vt=["href"],Gt={class:"flex flex-wrap mt-2 gap-1"},Ft={key:0,class:"text-sm text-red-600 dark:text-red-400"},Qt={class:"col-span-12"},zt={class:"flex flex-wrap sm:flex-nowrap gap-2 sm:space-y-0 sm:space-y-0"},Yt={key:0,class:"w-full"},Xt={key:0},Zt={key:1},Wt={key:1},Jt={key:1,class:"col-span-12"},er={key:0},tr={key:0},rr={key:1},ar={key:0},nr={key:1},cr={__name:"SecretForm",props:{secret:{type:String,default:null},decryptUrl:{type:String,default:null}},setup(p){const a=M("generating"),e=p,t=M(null),n=ue({}),o=ue({password:null}),l=M(!1),s=Q(()=>{var g,h;return e.secret&&(!((h=(g=D().props.jetstream.flash)==null?void 0:g.secret)!=null&&h.message)||l.value===!1)?"mt-1 block w-full blur-sm":"mt-1 block w-full"}),r=g=>{switch(g.code){case 429:return"That's too many messages in a short time. Please wait try again in a minute.";default:return g.message}},i=()=>{new Qe().encryptMessage(d.message,o.password).then(h=>{d.transform(T=>({...T,message:h.secret})).post(route("secret.store"),{preserveScroll:!0,onSuccess:()=>{var T;if((T=D().props.jetstream.flash)!=null&&T.error){d.setError("message",r(D().props.jetstream.flash.error));return}h.passphrase!=o.password&&(o.password=h.passphrase),a.value="generated"}})}).catch(h=>{o.setError("password",h.message)})},u=Q(()=>e.secret==null?"Enter a passsword, or leave blank to auto generate a password for you.":"Enter your password to decrypt the message.");M(!1);const c=Q(()=>{var h,T,b,E,B,v,C,_,I;let g=(b=(T=(h=D().props)==null?void 0:h.auth)==null?void 0:T.user)!=null&&b.id?"user":"guest";return(v=(B=(E=D().props)==null?void 0:E.auth)==null?void 0:B.user)!=null&&v.id?(I=(_=(C=D().props)==null?void 0:C.auth)==null?void 0:_.user)!=null&&I.subscription?g="subscribed":g="user":g="guest",g}),f=Q(()=>{let g=0;switch(c.value){case"subscribed":g=D().props.auth.user.plan.settings.expiry.expiry_minutes;break;case"user":g=D().props.config.secrets.expiry_limits.user;break;case"guest":g=D().props.config.secrets.expiry_limits.guest;break}return D().props.config.secrets.expiry_options.filter(h=>h.value<=g)}),d=ue({message:e.secret?"This isn’t the actual message—it’s just a placeholder. To view the message, please click the button below.":"",email:"",expires_in:f.value[f.value.length-1].value}),y=()=>{d.email="",d.message="",d.expires_in=f.value[f.value.length-1].value,o.password=null,a.value="generating",et.reload()},A=Q(()=>{switch(c.value){case"subscribed":return D().props.auth.user.plan.settings.messages.message_length;case"user":return D().props.config.secrets.message_length.user;case"guest":return D().props.config.secrets.message_length.guest}}),P=()=>{const g=new Qe;n.get(e.decryptUrl,{preserveScroll:!0,preserveState:!0,onSuccess:()=>{var h,T,b;if(!((h=D().props.jetstream.flash)!=null&&h.error)&&((b=(T=D().props.jetstream.flash)==null?void 0:T.error)==null?void 0:b.code)!=404){const E=D().props.jetstream.flash.secret.message,B=o.password;g.decryptMessage(E,B).then(v=>{d.message=v,l.value=!0}).catch(v=>{d.setError("message",v)})}},onError:()=>{d.setError("message","Could not get your message. Either the password was wrong, or the message is already expired, or the message was already retrieved. You have no more attempts.")}})};return(g,h)=>(x(),V(Ct,null,{title:R(()=>h[4]||(h[4]=[O(" FlashView ")])),form:R(()=>{var T,b,E,B,v,C,_,I,j,U,K,$,F;return[w("div",Ht,[e.secret!=null?(x(),V(fe,{key:0,type:"Warning","hide-title":""},{default:R(()=>h[5]||(h[5]=[w("div",{class:"mb-2"},[O(" You can attempt to retrieve this message "),w("span",{class:"relative inline-block"},[O(" ONLY ONCE "),w("svg",{class:"underline-svg",xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 300 20"},[w("path",{d:"M0 15 Q150 -10 300 15"})])]),O(". ")],-1),w("ol",{class:"space-y-1 list-decimal list-inside"},[w("li",null,"Wrong password will result in the message being deleted."),w("li",null,"Correct password will show the message, and the message will be deleted."),w("li",null,"Message will be deleted after the expiration time.")],-1)])),_:1})):H("",!0),((T=g.$page.props.jetstream.flash.error)==null?void 0:T.code)==404?(x(),V(fe,{key:1,"hide-title":"",type:"Error"},{default:R(()=>h[6]||(h[6]=[O(" This message has expired or has already been retrieved. ")])),_:1})):H("",!0)]),a.value=="generated"?(x(),k("div",Dt,[N(fe,{"hide-title":"",type:"Success"},{default:R(()=>h[7]||(h[7]=[O(" Please share the link and password separately to the recipient. The message can be retrieved only once and only with both the link and the password. If you wish to prematurely delete the message, you may visit the link and enter any random password and click retrieve. ")])),_:1})])):H("",!0),w("div",jt,[a.value=="generated"?(x(),k("span",Rt,[N(de,{value:"Retrieval Link"}),a.value=="generated"?(x(),V(ke,{key:0,value:(E=(b=g.$page.props.jetstream.flash)==null?void 0:b.secret)==null?void 0:E.url,class:"break-words mt-1"},null,8,["value"])):H("",!0)])):(x(),k("span",Kt,[N(vt,{autofocus:e.secret==null,id:"message",rows:"7",modelValue:S(d).message,"onUpdate:modelValue":h[0]||(h[0]=L=>S(d).message=L),type:"text",class:G(s.value),placeholder:"Your secret message...","max-length":(v=(B=g.$page.props.jetstream.flash)==null?void 0:B.secret)!=null&&v.message?0:A.value},null,8,["autofocus","modelValue","class","max-length"]),w("div",Lt,[h[13]||(h[13]=w("div",{class:"flex flex-wrap"},[w("svg",{xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 24 24",fill:"currentColor",class:"size-4"},[w("path",{"fill-rule":"evenodd",d:"M12 1.5a5.25 5.25 0 0 0-5.25 5.25v3a3 3 0 0 0-3 3v6.75a3 3 0 0 0 3 3h10.5a3 3 0 0 0 3-3v-6.75a3 3 0 0 0-3-3v-3c0-2.9-2.35-5.25-5.25-5.25Zm3.75 8.25v-3a3.75 3.75 0 1 0-7.5 0v3h7.5Z","clip-rule":"evenodd"})]),w("div",{class:"ml-1"},"End-to-end encrypted")],-1)),e.secret?H("",!0):(x(),k("span",Ut,[!g.$page.props.auth.user||!g.$page.props.auth.user.subscription?(x(),k("div",$t,"|")):H("",!0),g.$page.props.auth.user?g.$page.props.auth.user.subscription?H("",!0):(x(),k("div",Mt,[O(" Is "+J(A.value)+" characters still too short, or need a longer expiry? - ",1),w("a",{as:"a",class:"underline text-gamboge-200",href:g.route("plans.index")},"subscribe to a paid plan",8,Vt),h[12]||(h[12]=O(" to increase the limits. "))])):(x(),k("div",qt,[O(" Is "+J(A.value)+" characters too short, or need a longer expiry? - ",1),N(S(X),{class:"underline text-gamboge-200",href:g.route("login")},{default:R(()=>h[8]||(h[8]=[O("login")])),_:1},8,["href"]),h[10]||(h[10]=O(" or ")),N(S(X),{class:"underline text-gamboge-200",href:g.route("register")},{default:R(()=>h[9]||(h[9]=[O("create a free account!")])),_:1},8,["href"]),h[11]||(h[11]=O(" to increase the limit. "))]))]))]),w("div",Gt,[N(ee,{message:S(d).errors.message},null,8,["message"]),(C=S(d).errors.message)!=null&&C.length&&((_=g.$page.props.jetstream.flash.error)==null?void 0:_.code)==429?(x(),k("div",Ft,[h[16]||(h[16]=O(" Or ")),N(S(X),{class:"underline text-gamboge-200",href:g.route("login")},{default:R(()=>h[14]||(h[14]=[O("login")])),_:1},8,["href"]),h[17]||(h[17]=O(" or ")),N(S(X),{class:"underline text-gamboge-200",href:g.route("register")},{default:R(()=>h[15]||(h[15]=[O("create a free account!")])),_:1},8,["href"]),h[18]||(h[18]=O(" to send more. "))])):H("",!0)])]))]),w("div",Qt,[w("div",zt,[((j=(I=g.$page.props.jetstream.flash)==null?void 0:I.secret)==null?void 0:j.message)==null?(x(),k("div",Yt,[a.value=="generated"?(x(),k("span",Xt,[N(de,{value:"Password"}),N(ke,{value:S(o).password,class:"mt-1"},null,8,["value"])])):(x(),k("span",Zt,[N(Pe,{id:"password",autofocus:e.secret!=null,ref_key:"passwordInput",ref:t,modelValue:S(o).password,"onUpdate:modelValue":h[1]||(h[1]=L=>S(o).password=L),type:"text",class:"mt-1 block w-full",placeholder:u.value},null,8,["autofocus","modelValue","placeholder"]),N(ee,{message:S(o).errors.password,class:"mt-2"},null,8,["message"])]))])):H("",!0),!((K=(U=g.$page.props.jetstream.flash)==null?void 0:U.secret)!=null&&K.url)&&e.secret==null?(x(),k("div",Wt,[N(Pt,{id:"expires_in",modelValue:S(d).expires_in,"onUpdate:modelValue":h[2]||(h[2]=L=>S(d).expires_in=L),class:"mt-1 sm:w-full",options:f.value},null,8,["modelValue","options"]),N(ee,{message:S(o).errors.expires_in,class:"mt-2"},null,8,["message"])])):H("",!0)])]),g.$page.props.auth.user?(x(),k("div",Jt,[a.value=="generated"?(x(),k("span",er,[S(d).email?(x(),k("span",tr,[N(de,{value:"Recipient's Email"}),N(ke,{value:S(d).email,class:"mt-1"},null,8,["value"])])):H("",!0)])):!((F=($=g.$page.props.jetstream.flash)==null?void 0:$.secret)!=null&&F.url)&&e.secret==null?(x(),k("span",rr,[N(Pe,{modelValue:S(d).email,"onUpdate:modelValue":h[3]||(h[3]=L=>S(d).email=L),placeholder:"Recipient's email adddress (optional)",class:"mt-1 block w-full",type:"email"},null,8,["modelValue"]),N(ee,{message:S(d).errors.email,class:"mt-2"},null,8,["message"])])):H("",!0)])):H("",!0)]}),actions:R(()=>{var T,b,E,B,v,C;return[e.secret==null?(x(),k("span",ar,[(b=(T=g.$page.props.jetstream.flash)==null?void 0:T.secret)!=null&&b.url?(x(),V(ce,{key:0,onClick:W(y,["prevent"]),class:G({"opacity-25":S(d).processing}),disabled:S(d).processing},{default:R(()=>h[19]||(h[19]=[O(" Let's do another one ")])),_:1},8,["class","disabled"])):(x(),V(ce,{key:1,onClick:W(i,["prevent"]),class:G({"opacity-25":S(d).processing}),disabled:S(d).processing},{default:R(()=>h[20]||(h[20]=[O(" Generate link ")])),_:1},8,["class","disabled"]))])):(x(),k("span",nr,[(B=(E=g.$page.props.jetstream.flash)==null?void 0:E.secret)!=null&&B.message?(x(),V(S(X),{key:1,href:g.route("welcome"),class:"inline-flex items-center px-4 py-2 bg-gamboge-800 dark:bg-gamboge-200 border border-transparent rounded-md font-semibold text-xs text-white dark:text-gamboge-800 uppercase tracking-widest hover:bg-gamboge-700 dark:hover:bg-white focus:bg-gamboge-700 dark:focus:bg-white active:bg-gamboge-900 dark:active:bg-gamboge-300 focus:outline-none focus:ring-2 focus:ring-gamboge-500 focus:ring-offset-2 dark:focus:ring-offset-gamboge-800 disabled:opacity-50 transition ease-in-out duration-150"},{default:R(()=>h[22]||(h[22]=[O(" Send a new secret link ")])),_:1},8,["href"])):(x(),V(ce,{key:0,onClick:W(P,["prevent"]),class:G({"opacity-25":S(n).processing||((v=S(o).password)==null?void 0:v.length)==0||S(o).password==null}),disabled:S(n).processing||((C=S(o).password)==null?void 0:C.length)==0||S(o).password==null},{default:R(()=>h[21]||(h[21]=[O(" Retrieve Message ")])),_:1},8,["class","disabled"]))]))]}),_:1}))}};export{cr as default};
