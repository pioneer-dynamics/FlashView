import{d as G,s as ze,o as b,e as C,I as Ye,J as Xe,k as le,H as We,a as y,n as M,r as Y,f as j,i as Z,t as U,F as ce,h as Ze,g as _,T as de,Q as V,b as N,w as T,c as D,u as v,B as Je,G as et,Z as tt,j as ee}from"./app-aoPDHV-V.js";import{_ as fe}from"./PrimaryButton-9wIFlEt9.js";import{a as pe,_ as rt}from"./TextInput-DryTVMgk.js";import{_ as at}from"./_plugin-vue_export-helper-DlAUqK2U.js";const nt="/build/assets/bg-Bk90_pgC.png",st=["value"],ot={__name:"TextAreaInput",props:{modelValue:String},emits:["update:modelValue"],setup(p,{expose:a}){const e=G(null);return ze(()=>{e.value.hasAttribute("autofocus")&&e.value.focus()}),a({focus:()=>e.value.focus()}),(t,n)=>(b(),C("textarea",{ref_key:"input",ref:e,class:"border-gray-300 dark:border-gray-700 dark:bg-gray-700 dark:text-gray-200 focus:border-gray-500 dark:focus:border-gray-600 focus:ring-gray-500 dark:focus:ring-gray-600 rounded-md shadow-sm",value:p.modelValue,onInput:n[0]||(n[0]=o=>t.$emit("update:modelValue",o.target.value))},null,40,st))}},L=window.crypto||window.msCrypto,g=L.subtle||L.webkitSubtle,Q="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",W=new Uint8Array(256),he="06092a864886f70d01050d",z="06092a864886f70d01050c",ye="060960864801650304012e",ge="060960864801650304011a",me="0609608648016503040106",be="060960864801650304012a",we="0609608648016503040116",Ee="0609608648016503040102",xe="060960864801650304012c",ve="0609608648016503040118",Se="06086086480165030404",_e="06082a864886f70d020b0500",Pe="06082a864886f70d020a0500",Oe="06082a864886f70d02090500",Ne="06082a864886f70d02070500",Ie="06092a864886f70d010101",He="06072a8648ce3d0201",De="06082a8648ce3d030107",je="06052b81040022",Re="06052b81040023";class Ae{constructor(){for(let a=0;a<Q.length;a++)W[Q.charCodeAt(a)]=a}encodeAb(a){const e=new Uint8Array(a),t=e.length;let n="";for(let o=0;o<t;o+=3)n+=Q[e[o]>>2],n+=Q[(e[o]&3)<<4|e[o+1]>>4],n+=Q[(e[o+1]&15)<<2|e[o+2]>>6],n+=Q[e[o+2]&63];return t%3===2?n=n.substring(0,n.length-1)+"=":t%3===1&&(n=n.substring(0,n.length-2)+"=="),n}decodeAb(a){const e=a.length;let t=a.length*.75,n=0,o,l,s,r;a[a.length-1]==="="&&(t--,a[a.length-2]==="="&&t--);const i=new ArrayBuffer(t);let d=new Uint8Array(i);for(let u=0;u<e;u+=4)o=W[a.charCodeAt(u)],l=W[a.charCodeAt(u+1)],s=W[a.charCodeAt(u+2)],r=W[a.charCodeAt(u+3)],d[n++]=o<<2|l>>4,d[n++]=(l&15)<<4|s>>2,d[n++]=(s&3)<<6|r&63;return i}arrayBufferToString(a){if(typeof a!="object")throw new TypeError("Expected input of arrayBuffer to be an ArrayBuffer Object");return new TextDecoder("utf-8").decode(a)}stringToArrayBuffer(a){if(typeof a!="string")throw new TypeError("Expected input of str to be a String");return new TextEncoder("utf-8").encode(a).buffer}arrayBufferToHexString(a){if(typeof a!="object")throw new TypeError("Expected input of arrayBuffer to be an ArrayBuffer Object");const e=new Uint8Array(a);let t="",n;for(let o=0;o<e.byteLength;o++)n=e[o].toString(16),n.length<2&&(n="0"+n),t+=n;return t}hexStringToArrayBuffer(a){if(typeof a!="string")throw new TypeError("Expected input of hexString to be a String");if(a.length%2!==0)throw new RangeError("Expected string to be an even number of characters");const e=new Uint8Array(a.length/2);for(let t=0;t<a.length;t+=2)e[t/2]=parseInt(a.substring(t,t+2),16);return e.buffer}arrayBufferToBase64(a){if(typeof a!="object")throw new TypeError("Expected input of arrayBuffer to be an ArrayBuffer Object");return this.encodeAb(a)}base64ToArrayBuffer(a){if(typeof a!="string")throw new TypeError("Expected input of b64 to be a Base64 String");return this.decodeAb(a)}decimalToHex(a,e){if(e=typeof e<"u"?e:!1,typeof e!="boolean")throw new TypeError("Expected input of unsigned to be a Boolean");let t=null;if(typeof a=="number")return e?(t=a.toString(16),t.length%2?"000"+t:"00"+t):(t=a.toString(16),t.length%2?"0"+t:t);if(typeof a=="string")return t=(a.length/2).toString(16),t.length%2?"0"+t:t;throw new TypeError("Expected input of d to be a Number or String")}addNewLines(a){let e="";for(;a.length>0;)e+=a.substring(0,64)+`\r
`,a=a.substring(64);return e}removeLines(a){return a.replace(/\r?\n|\r/g,"")}toAsn1(a,e,t,n,o,l,s){a=this.arrayBufferToHexString(a),e=this.arrayBufferToHexString(e),t=this.arrayBufferToHexString(t),n=this.decimalToHex(n,!0);const r={};switch(o){case"SHA-512":r.HASH_OID=_e;break;case"SHA-384":r.HASH_OID=Pe;break;case"SHA-256":r.HASH_OID=Oe;break;case"SHA-1":r.HASH_OID=Ne}switch(l){case"AES-GCM":s===256?r.CIPHER_OID=ye:s===192?r.CIPHER_OID=ge:s===128&&(r.CIPHER_OID=me);break;case"AES-CBC":s===256?r.CIPHER_OID=be:s===192?r.CIPHER_OID=we:s===128&&(r.CIPHER_OID=Ee);break;case"AES-CFB":s===256?r.CIPHER_OID=xe:s===192?r.CIPHER_OID=ve:s===128&&(r.CIPHER_OID=Se)}const i="02"+this.decimalToHex(n.length/2)+n,d="04"+this.decimalToHex(e)+e,u="04"+this.decimalToHex(t)+t,f="04"+(this.decimalToHex(a).length/2===2?"82":"81")+this.decimalToHex(a)+a;r.SEQUENCE_AES_CONTAINER="30"+this.decimalToHex(r.CIPHER_OID+u),r.SEQUENCE_HASH_CONTAINER="30"+this.decimalToHex(r.HASH_OID),r.SEQUENCE_PBKDF2_INNER_CONTAINER="30"+this.decimalToHex(d+i+r.SEQUENCE_HASH_CONTAINER+r.HASH_OID),r.SEQUENCE_PBKDF2_CONTAINER="30"+this.decimalToHex(z+r.SEQUENCE_PBKDF2_INNER_CONTAINER+d+i+r.SEQUENCE_HASH_CONTAINER+r.HASH_OID),r.SEQUENCE_PBES2_INNER_CONTAINER="30"+this.decimalToHex(r.SEQUENCE_PBKDF2_CONTAINER+z+r.SEQUENCE_PBKDF2_INNER_CONTAINER+d+i+r.SEQUENCE_HASH_CONTAINER+r.HASH_OID+r.SEQUENCE_AES_CONTAINER+r.CIPHER_OID+u),r.SEQUENCE_PBES2_CONTAINER="30"+this.decimalToHex(he+r.SEQUENCE_PBES2_INNER_CONTAINER+r.SEQUENCE_PBKDF2_CONTAINER+z+r.SEQUENCE_PBKDF2_INNER_CONTAINER+d+i+r.SEQUENCE_HASH_CONTAINER+r.HASH_OID+r.SEQUENCE_AES_CONTAINER+r.CIPHER_OID+u);const h=r.SEQUENCE_PBES2_CONTAINER+he+r.SEQUENCE_PBES2_INNER_CONTAINER+r.SEQUENCE_PBKDF2_CONTAINER+z+r.SEQUENCE_PBKDF2_INNER_CONTAINER+d+i+r.SEQUENCE_HASH_CONTAINER+r.HASH_OID+r.SEQUENCE_AES_CONTAINER+r.CIPHER_OID+u,w=this.decimalToHex(h+f),k="30"+(w.length/2===2?"82":"81")+w+h+f,I=this.hexStringToArrayBuffer(k);let P=this.arrayBufferToBase64(I);return P=this.addNewLines(P),P=`-----BEGIN ENCRYPTED PRIVATE KEY-----\r
`+P+"-----END ENCRYPTED PRIVATE KEY-----",P}fromAsn1(a){a=this.removeLines(a),a=a.replace("-----BEGIN ENCRYPTED PRIVATE KEY-----",""),a=a.replace("-----END ENCRYPTED PRIVATE KEY-----",""),a=this.base64ToArrayBuffer(a);const e={},t=this.arrayBufferToHexString(a);return e.data=t,e.data.includes(he)&&e.data.includes(z)&&(e.valid=!0),e.saltBegin=e.data.indexOf(z)+28,e.data.includes(ye)?(e.cipher="AES-GCM",e.length=256,e.ivBegin=e.data.indexOf(ye)+24):e.data.includes(ge)?(e.cipher="AES-GCM",e.length=192,e.ivBegin=e.data.indexOf(ge)+24):e.data.includes(me)?(e.cipher="AES-GCM",e.length=128,e.ivBegin=e.data.indexOf(me)+24):e.data.includes(be)?(e.cipher="AES-CBC",e.length=256,e.ivBegin=e.data.indexOf(be)+24):e.data.includes(we)?(e.cipher="AES-CBC",e.length=192,e.ivBegin=e.data.indexOf(we)+24):e.data.includes(Ee)?(e.cipher="AES-CBC",e.length=128,e.ivBegin=e.data.indexOf(Ee)+24):e.data.includes(xe)?(e.cipher="AES-CFB",e.length=256,e.ivBegin=e.data.indexOf(xe)+24):e.data.includes(ve)?(e.cipher="AES-CFB",e.length=192,e.ivBegin=e.data.indexOf(ve)+24):e.data.includes(Se)&&(e.cipher="AES-CFB",e.length=128,e.ivBegin=e.data.indexOf(Se)+22),e.data.includes(_e)?e.hash="SHA-512":e.data.includes(Pe)?e.hash="SHA-384":e.data.includes(Oe)?e.hash="SHA-256":e.data.includes(Ne)&&(e.hash="SHA-1"),e.saltLength=parseInt(e.data.substr(e.saltBegin,2),16),e.ivLength=parseInt(e.data.substr(e.ivBegin,2),16),e.salt=e.data.substr(e.saltBegin+2,e.saltLength*2),e.iv=e.data.substr(e.ivBegin+2,e.ivLength*2),e.iterBegin=e.saltBegin+4+e.saltLength*2,e.iterLength=parseInt(e.data.substr(e.iterBegin,2),16),e.iter=parseInt(e.data.substr(e.iterBegin+2,e.iterLength*2),16),e.sequencePadding=e.data.substr(2,2)==="81"?8:10,e.parametersPadding=e.data.substr(2,2)==="81"?12:16,e.sequenceLength=parseInt(e.data.substr(e.sequencePadding,2),16),e.encryptedDataBegin=e.parametersPadding+e.sequenceLength*2,e.encryptedDataPadding=e.data.substr(e.encryptedDataBegin-2,2)==="81"?2:4,e.encryptedDataLength=parseInt(e.data.substr(e.encryptedDataBegin,6),16),e.encryptedData=e.data.substr(e.encryptedDataBegin+e.encryptedDataPadding,e.encryptedDataLength*2),{salt:this.hexStringToArrayBuffer(e.salt),iv:this.hexStringToArrayBuffer(e.iv),cipher:e.cipher,length:e.length,hash:e.hash,iter:e.iter,encryptedData:this.hexStringToArrayBuffer(e.encryptedData)}}cryptoPrivateToPem(a){const e=this;return new Promise((t,n)=>{if(Object.prototype.toString.call(a)!=="[object CryptoKey]"&&a.type!=="private")throw new TypeError("Expected input to be a CryptoKey Object");g.exportKey("pkcs8",a).then(o=>{const l=e.arrayBufferToBase64(o);let s=e.addNewLines(l);s=`-----BEGIN PRIVATE KEY-----\r
`+s+"-----END PRIVATE KEY-----",t(s)}).catch(o=>{n(o)})})}pemPrivateToCrypto(a,e){const t=this;return typeof e>"u"&&(e={}),e.isExtractable=typeof e.isExtractable<"u"?e.isExtractable:!0,new Promise((n,o)=>{if(typeof a!="string")throw new TypeError("Expected input of pem to be a String");if(typeof e.isExtractable!="boolean")throw new TypeError("Expected input of options.isExtractable to be a Boolean");a=a.replace("-----BEGIN PRIVATE KEY-----",""),a=a.replace("-----END PRIVATE KEY-----","");const l=t.removeLines(a),s=t.base64ToArrayBuffer(l),r=t.arrayBufferToHexString(s),i={};if(r.includes(He)){if(e.name=typeof e.name<"u"?e.name:"ECDH",typeof e.name!="string")throw new TypeError("Expected input of options.name to be a String");let d=null;if(r.includes(De)?d="P-256":r.includes(je)?d="P-384":r.includes(Re)&&(d="P-521"),e.name==="ECDH")e.usages=typeof e.usages<"u"?e.usages:["deriveKey","deriveBits"];else if(e.name==="ECDSA")e.usages=typeof e.usages<"u"?e.usages:["sign"];else throw new TypeError("Expected input of options.name is not a valid algorithm name");if(typeof e.usages!="object")throw new TypeError("Expected input of options.usages to be an Array");i.name=e.name,i.namedCurve=d}else if(r.includes(Ie)){if(e.name=typeof e.name<"u"?e.name:"RSA-OAEP",e.hash=typeof e.hash<"u"?e.hash:"SHA-512",typeof e.name!="string")throw new TypeError("Expected input of options.name to be a String");if(typeof e.hash!="string")throw new TypeError("Expected input of options.hash to be a String");if(e.name==="RSA-OAEP")e.usages=typeof e.usages<"u"?e.usages:["decrypt","unwrapKey"];else if(e.name==="RSA-PSS")e.usages=typeof e.usages<"u"?e.usages:["sign"];else throw new TypeError("Expected input of options.name is not a valid algorithm name");if(typeof e.usages!="object")throw new TypeError("Expected input of options.usages to be an Array");i.name=e.name,i.hash={},i.hash.name=e.hash}else throw new TypeError("Expected input of pem is not a valid private key");g.importKey("pkcs8",s,i,e.isExtractable,e.usages).then(d=>{n(d)}).catch(d=>{o(d)})})}cryptoPublicToPem(a){const e=this;return new Promise((t,n)=>{if(Object.prototype.toString.call(a)!=="[object CryptoKey]"&&a.type!=="public")throw new TypeError("Expected input of publicKey to be a CryptoKey Object of type public");g.exportKey("spki",a).then(o=>{const l=e.arrayBufferToBase64(o);let s=e.addNewLines(l);s=`-----BEGIN PUBLIC KEY-----\r
`+s+"-----END PUBLIC KEY-----",t(s)}).catch(o=>{n(o)})})}pemPublicToCrypto(a,e){const t=this;return typeof e>"u"&&(e={}),e.isExtractable=typeof e.isExtractable<"u"?e.isExtractable:!0,new Promise((n,o)=>{if(typeof a!="string")throw new TypeError("Expected input of pem to be a String");if(typeof e.isExtractable!="boolean")throw new TypeError("Expected input of options.isExtractable to be a Boolean");a=a.replace("-----BEGIN PUBLIC KEY-----",""),a=a.replace("-----END PUBLIC KEY-----","");const l=t.removeLines(a),s=t.base64ToArrayBuffer(l),r=t.arrayBufferToHexString(s),i={};if(r.includes(He)){if(e.name=typeof e.name<"u"?e.name:"ECDH",typeof e.name!="string")throw new TypeError("Expected input of options.name to be a String");let d=null;if(r.includes(De)?d="P-256":r.includes(je)?d="P-384":r.includes(Re)&&(d="P-521"),e.name==="ECDH")e.usages=typeof e.usages<"u"?e.usages:[];else if(e.name==="ECDSA")e.usages=typeof e.usages<"u"?e.usages:["verify"];else throw new TypeError("Expected input of options.name is not a valid algorithm name");if(typeof e.usages!="object")throw new TypeError("Expected input of options.usages to be an Array");i.name=e.name,i.namedCurve=d}else if(r.includes(Ie)){if(e.name=typeof e.name<"u"?e.name:"RSA-OAEP",e.hash=typeof e.hash<"u"?e.hash:"SHA-512",typeof e.name!="string")throw new TypeError("Expected input of options.name to be a String");if(typeof e.hash!="string")throw new TypeError("Expected input of options.hash to be a String");if(e.name==="RSA-OAEP")e.usages=typeof e.usages<"u"?e.usages:["encrypt","wrapKey"];else if(e.name==="RSA-PSS")e.usages=typeof e.usages<"u"?e.usages:["verify"];else throw new TypeError("Expected input of options.name is not a valid algorithm name");if(typeof e.usages!="object")throw new TypeError("Expected input of options.usages to be an Array");i.name=e.name,i.hash={},i.hash.name=e.hash}else throw new TypeError("Expected input of pem is not a valid public key");g.importKey("spki",s,i,e.isExtractable,e.usages).then(d=>{n(d)}).catch(d=>{o(d)})})}cryptoToBase64(a,e){const t=this;let n=null;switch(a.type){case"secret":n="raw";break;case"private":n="pkcs8";break;case"public":n="spki"}return e=typeof e<"u"?e:n,new Promise((o,l)=>{if(Object.prototype.toString.call(a)!=="[object CryptoKey]")throw new TypeError("Expected input of key to be a CryptoKey Object");if(typeof e!="string")throw new TypeError("Expected input of type to be a String");g.exportKey(n,a).then(s=>{const r=t.arrayBufferToBase64(s);o(r)}).catch(s=>{l(s)})})}base64ToCrypto(a,e){const t=this;return typeof e>"u"&&(e={}),e.name=typeof e.name<"u"?e.name:"AES-GCM",e.isExtractable=typeof e.isExtractable<"u"?e.isExtractable:!0,new Promise((n,o)=>{if(typeof a!="string")throw new TypeError("Expected input of key to be a Base64 String");if(typeof e.name!="string")throw new TypeError("Expected input of options.name to be a String");if(typeof e.isExtractable!="boolean")throw new TypeError("Expected input of options.isExtractable to be a Boolean");const l={};if(l.name=e.name,e.name==="AES-GCM"||e.name==="AES-CBC"){if(e.type=typeof e.type<"u"?e.type:"raw",e.length=typeof e.length<"u"?e.length:256,e.usages=typeof e.usages<"u"?e.usages:["encrypt","decrypt","wrapKey","unwrapKey"],typeof e.length!="number")throw new TypeError("Expected input of options.length to be a Number")}else if(e.name==="ECDH"){if(e.type=typeof e.type<"u"?e.type:"pkcs8",e.namedCurve=typeof e.namedCurve<"u"?e.namedCurve:"P-256",e.usages=typeof e.usages<"u"?e.usages:["deriveKey","deriveBits"],typeof e.namedCurve!="string")throw new TypeError("Expected input of options.namedCurve to be a String");l.namedCurve=e.namedCurve}else if(e.name==="ECDSA"){if(e.type=typeof e.type<"u"?e.type:"pkcs8",e.namedCurve=typeof e.namedCurve<"u"?e.namedCurve:"P-256",e.usages=typeof e.usages<"u"?e.usages:["sign"],typeof e.namedCurve!="string")throw new TypeError("Expected input of options.namedCurve to be a String");l.namedCurve=e.namedCurve}else if(e.name==="RSA-OAEP"){if(e.type=typeof e.type<"u"?e.type:"pkcs8",e.hash=typeof e.hash<"u"?e.hash:"SHA-512",e.usages=typeof e.usages<"u"?e.usages:["decrypt","unwrapKey"],typeof e.hash!="string")throw new TypeError("Expected input of options.hash to be a String");l.hash={},l.hash.name=e.hash}else if(e.name==="RSA-PSS"){if(e.type=typeof e.type<"u"?e.type:"pkcs8",e.hash=typeof e.hash<"u"?e.hash:"SHA-512",e.usages=typeof e.usages<"u"?e.usages:["sign"],typeof e.hash!="string")throw new TypeError("Expected input of options.hash to be a String");l.hash={},l.hash.name=e.hash}else throw new TypeError("Expected input of options.name is not a valid algorithm name");if(typeof e.type!="string")throw new TypeError("Expected input of options.type to be a String");if(typeof e.usages!="object")throw new TypeError("Expected input of options.usages to be an Array");const s=t.base64ToArrayBuffer(a);g.importKey(e.type,s,l,e.isExtractable,e.usages).then(r=>{n(r)}).catch(r=>{o(r)})})}getRSAKeyPair(a,e,t,n,o){return a=typeof a<"u"?a:2048,e=typeof e<"u"?e:"SHA-512",t=typeof t<"u"?t:"RSA-OAEP",o=typeof o<"u"?o:!0,new Promise((l,s)=>{if(typeof a!="number")throw new TypeError("Expected input of modulusLength to be a Number");if(typeof e!="string")throw new TypeError("Expected input of hash expected to be a String");if(typeof t!="string")throw new TypeError("Expected input of paddingScheme to be a String");if(typeof o!="boolean")throw new TypeError("Expected input of isExtractable to be a Boolean");if(t==="RSA-OAEP")n=typeof n<"u"?n:["encrypt","decrypt","wrapKey","unwrapKey"];else if(t==="RSA-PSS")n=typeof n<"u"?n:["sign","verify"];else throw new TypeError("Expected input of paddingScheme is not a valid padding scheme");if(typeof n!="object")throw new TypeError("Expected input of usages to be an Array");g.generateKey({name:t,modulusLength:a,publicExponent:new Uint8Array([1,0,1]),hash:{name:e}},o,n).then(r=>{l(r)}).catch(r=>{s(r)})})}rsaEncrypt(a,e){const t=this;return new Promise((n,o)=>{if(Object.prototype.toString.call(a)!=="[object CryptoKey]"&&a.type!=="public")throw new TypeError("Expected input of publicKey to be a CryptoKey Object of type public");if(typeof e!="object")throw new TypeError("Expected input of data to be an ArrayBuffer");g.encrypt({name:"RSA-OAEP"},a,e).then(l=>{const s=t.arrayBufferToBase64(l);n(s)}).catch(l=>{o(l)})})}rsaDecrypt(a,e){const t=this;return new Promise((n,o)=>{if(Object.prototype.toString.call(a)!=="[object CryptoKey]"&&a.type!=="private")throw new TypeError("Expected input of privateKey to be a CryptoKey Object of type private");if(typeof e!="string")throw new TypeError("Expected input of encryptedData to be a Base64 String");const l=t.base64ToArrayBuffer(e);g.decrypt({name:"RSA-OAEP"},a,l).then(s=>{n(s)}).catch(s=>{o(s)})})}getECKeyPair(a,e,t,n){return a=typeof a<"u"?a:"P-256",e=typeof e<"u"?e:"ECDH",n=typeof n<"u"?n:!0,new Promise((o,l)=>{if(typeof a!="string")throw new TypeError("Expected input of curve to be a String");if(typeof e!="string")throw new TypeError("Expected input of type to be a String");if(typeof n!="boolean")throw new TypeError("Expected input of isExtractable to be a Boolean");if(e==="ECDH")t=typeof t<"u"?t:["deriveKey","deriveBits"];else if(e==="ECDSA")t=typeof t<"u"?t:["sign","verify"];else throw new TypeError("Expected input of type is not a valid algorithm type");if(typeof t!="object")throw new TypeError("Expected input of usages to be an Array");g.generateKey({name:e,namedCurve:a},n,t).then(s=>{o(s)}).catch(s=>{l(s)})})}getPublicKey(a,e){return typeof e>"u"&&(e={}),e.isExtractable=typeof e.isExtractable<"u"?e.isExtractable:!0,new Promise((t,n)=>{if(Object.prototype.toString.call(a)!=="[object CryptoKey]"&&a.type!=="private")throw new TypeError("Expected input of privateKey must be a CryptoKey Object of type private");if(typeof e.isExtractable!="boolean")throw new TypeError("Expected input of options.isExtractable to be a Boolean");g.exportKey("jwk",a).then(o=>{const l={};switch(l.name=a.algorithm.name,a.algorithm.name){case"ECDH":if(delete o.d,o.key_ops=[],e.usages=typeof e.usages<"u"?e.usages:[],typeof e.usages!="object")throw new TypeError("Expected input of options.usages to be an Array");l.namedCurve=a.algorithm.namedCurve;break;case"ECDSA":if(delete o.d,o.key_ops=["verify"],e.usages=typeof e.usages<"u"?e.usages:["verify"],typeof e.usages!="object")throw new TypeError("Expected input of options.usages to be an Array");l.namedCurve=a.algorithm.namedCurve;break;case"RSA-OAEP":if(delete o.d,delete o.dp,delete o.dq,delete o.p,delete o.q,delete o.qi,o.key_ops=["encrypt","wrapKey"],e.usages=typeof e.usages<"u"?e.usages:["encrypt","wrapKey"],typeof e.usages!="object")throw new TypeError("Expected input of options.usages to be an Array");l.hash={},l.hash.name=a.algorithm.hash.name;break;case"RSA-PSS":if(delete o.d,delete o.dp,delete o.dq,delete o.p,delete o.q,delete o.qi,o.key_ops=["verify"],e.usages=typeof e.usages<"u"?e.usages:["verify"],typeof e.usages!="object")throw new TypeError("Expected input of options.usages to be an Array");l.hash={},l.hash.name=a.algorithm.hash.name;break;default:throw new TypeError("Expected input of privateKey is not a valid private key")}g.importKey("jwk",o,l,e.isExtractable,e.usages).then(s=>{t(s)}).catch(s=>{n(s)})}).catch(o=>{n(o)})})}encryptPrivateKey(a,e,t,n,o,l){const s=this;return t=typeof t<"u"?t:64e3,n=typeof n<"u"?n:"SHA-512",o=typeof o<"u"?o:"AES-GCM",l=typeof l<"u"?l:256,new Promise((r,i)=>{if(Object.prototype.toString.call(a)!=="[object CryptoKey]"&&a.type!=="private")throw new TypeError("Expected input of privateKey to be a CryptoKey Object of type private");if(typeof e!="string")throw new TypeError("Expected input of passphrase to be a String");if(typeof t!="number")throw new TypeError("Expected input of iterations to be a Number");if(typeof n!="string")throw new TypeError("Expected input of hash to be a String");if(typeof o!="string")throw new TypeError("Expected input of cipher to be a String");if(typeof l!="number")throw new TypeError("Expected input of length to be a Number");let d=null;switch(o){case"AES-GCM":d=12;break;case"AES-CBC":d=16;break;case"AES-CFB":d=16;break}const u=L.getRandomValues(new Uint8Array(16)),c=L.getRandomValues(new Uint8Array(d)),f=s.stringToArrayBuffer(e);g.importKey("raw",f,{name:"PBKDF2"},!1,["deriveKey"]).then(h=>{g.deriveKey({name:"PBKDF2",salt:u,iterations:t,hash:n},h,{name:o,length:l},!1,["wrapKey"]).then(w=>{g.wrapKey("pkcs8",a,w,{name:o,iv:c,tagLength:128}).then(x=>{const k=s.toAsn1(x,u,c,t,n,o,l);r(k)}).catch(x=>{i(x)})}).catch(w=>{i(w)})}).catch(h=>{i(h)})})}decryptPrivateKey(a,e,t){const n=this;return typeof t>"u"&&(t={}),t.name=typeof t.name<"u"?t.name:"ECDH",t.isExtractable=typeof t.isExtractable<"u"?t.isExtractable:!0,new Promise((o,l)=>{if(typeof a!="string")throw new TypeError("Expected input of encryptedPrivateKey to be a Base64 String");if(typeof e!="string")throw new TypeError("Expected input of passphrase to be a String");if(typeof t.isExtractable!="boolean")throw new TypeError("Expected input of options.isExtractable to be a Boolean");const s=this.fromAsn1(a),r={};if(r.name=t.name,t.name==="ECDH"){if(t.namedCurve=typeof t.namedCurve<"u"?t.namedCurve:"P-256",t.usages=typeof t.usages<"u"?t.usages:["deriveKey","deriveBits"],typeof t.namedCurve!="string")throw new TypeError("Expected input of options.namedCurve to be a String");if(typeof t.usages!="object")throw new TypeError("Expected input of options.usages to be an Array");r.namedCurve=t.namedCurve}else if(t.name==="ECDSA"){if(t.namedCurve=typeof t.namedCurve<"u"?t.namedCurve:"P-256",t.usages=typeof t.usages<"u"?t.usages:["sign"],typeof t.namedCurve!="string")throw new TypeError("Expected input of options.namedCurve to be a String");if(typeof t.usages!="object")throw new TypeError("Expected input of options.usages to be an Array");r.namedCurve=t.namedCurve}else if(t.name==="RSA-OAEP"){if(t.hash=typeof t.hash<"u"?t.hash:"SHA-512",t.usages=typeof t.usages<"u"?t.usages:["decrypt","unwrapKey"],typeof t.hash!="string")throw new TypeError("Expected input of options.hash to be a String");if(typeof t.usages!="object")throw new TypeError("Expected input of options.usages to be an Array");r.hash={},r.hash.name=t.hash}else if(t.name==="RSA-PSS"){if(t.hash=typeof t.hash<"u"?t.hash:"SHA-512",t.usages=typeof t.usages<"u"?t.usages:["sign"],typeof t.hash!="string")throw new TypeError("Expected input of options.hash to be a String");if(typeof t.usages!="object")throw new TypeError("Expected input of options.usages to be an Array");r.hash={},r.hash.name=t.hash}else throw new TypeError("Expected input of encryptedPrivateKey is not a valid encrypted private key");const i=n.stringToArrayBuffer(e);g.importKey("raw",i,{name:"PBKDF2"},!1,["deriveKey"]).then(d=>{g.deriveKey({name:"PBKDF2",salt:s.salt,iterations:s.iter,hash:s.hash},d,{name:s.cipher,length:s.length},!1,["unwrapKey"]).then(u=>{g.unwrapKey("pkcs8",s.encryptedData,u,{name:s.cipher,iv:s.iv,tagLength:128},r,t.isExtractable,t.usages).then(c=>{o(c)}).catch(c=>{l(c)})}).catch(u=>{l(u)})}).catch(d=>{l(d)})})}keyAgreement(a,e,t){return typeof t>"u"&&(t={}),t.bitLength=typeof t.bitLength<"u"?t.bitLength:256,t.hkdfHash=typeof t.hkdfHash<"u"?t.hkdfHash:"SHA-512",t.hkdfSalt=typeof t.hkdfSalt<"u"?t.hkdfSalt:new Uint8Array,t.hkdfInfo=typeof t.hkdfInfo<"u"?t.hkdfInfo:new Uint8Array,t.cipher=typeof t.cipher<"u"?t.cipher:"AES-GCM",t.length=typeof t.length<"u"?t.length:256,t.usages=typeof t.usages<"u"?t.usages:["encrypt","decrypt","unwrapKey","wrapKey"],t.isExtractable=typeof t.isExtractable<"u"?t.isExtractable:!0,new Promise((n,o)=>{if(Object.prototype.toString.call(a)!=="[object CryptoKey]"&&a.type!=="private")throw new TypeError("Expected input of privateKey to be a CryptoKey Object of type private");if(Object.prototype.toString.call(e)!=="[object CryptoKey]"&&e.type!=="public")throw new TypeError("Expected input of publicKey to be a CryptoKey Object of type public");if(typeof t.bitLength!="number")throw new TypeError("Expected input of options.bitLength to be a Number");if(typeof t.hkdfHash!="string")throw new TypeError("Expected input of options.hkdfHash to be a String");if(typeof t.hkdfSalt!="object")throw new TypeError("Expected input of options.hkdfSalt to be an ArrayBuffer");if(typeof t.hkdfInfo!="object")throw new TypeError("Expected input of options.hkdfInfo to be an ArrayBuffer");if(typeof t.cipher!="string")throw new TypeError("Expected input of options.cipher to be a String");if(typeof t.length!="number")throw new TypeError("Expected input of options.length to be a Number");if(typeof t.usages!="object")throw new TypeError("Expected input of options.usages to be an Array");if(typeof t.isExtractable!="boolean")throw new TypeError("Expected input of options.isExtractable to be a Boolean");g.deriveBits({name:"ECDH",namedCurve:e.algorithm.namedCurve,public:e},a,t.bitLength).then(l=>{g.importKey("raw",l,{name:"HKDF"},!1,["deriveKey"]).then(s=>{g.deriveKey({name:"HKDF",hash:{name:t.hkdfHash},salt:t.hkdfSalt,info:t.hkdfInfo},s,{name:t.cipher,length:t.length},t.isExtractable,t.usages).then(r=>{n(r)}).catch(r=>{o(r)})}).catch(s=>{o(s)})}).catch(l=>{o(l)})})}getSharedKey(a,e){return a=typeof a<"u"?a:256,typeof e>"u"&&(e={}),e.cipher=typeof e.cipher<"u"?e.cipher:"AES-GCM",e.usages=typeof e.usages<"u"?e.usages:["encrypt","decrypt","wrapKey","unwrapKey"],e.isExtractable=typeof e.isExtractable<"u"?e.isExtractable:!0,new Promise((t,n)=>{if(typeof a!="number")throw new TypeError("Expected input of length to be a Number");if(typeof e.cipher!="string")throw new TypeError("Expected input of options.cipher expected to be a String");if(typeof e.usages!="object")throw new TypeError("Expected input of options.usages to be an Array");if(typeof e.isExtractable!="boolean")throw new TypeError("Expected input of options.isExtractable expected to be a Boolean");g.generateKey({name:e.cipher,length:a},e.isExtractable,e.usages).then(o=>{t(o)}).catch(o=>{n(o)})})}encryptKey(a,e){const t=this;return new Promise((n,o)=>{if(Object.prototype.toString.call(a)!=="[object CryptoKey]")throw new TypeError("Expected input of wrappingKey to be a CryptoKey Object");if(Object.prototype.toString.call(e)!=="[object CryptoKey]")throw new TypeError("Expected input of key to be a CryptoKey Object");let l=null;switch(e.type){case"secret":l="raw";break;case"private":l="pkcs8";break;case"public":l="spki"}if(a.type==="secret"){let s=null;if(a.algorithm.name==="AES-GCM")s=L.getRandomValues(new Uint8Array(12));else if(a.algorithm.name==="AES-CBC")s=L.getRandomValues(new Uint8Array(16));else throw new TypeError("Cipher mode of the wrappingKey is not supported");g.wrapKey(l,e,a,{name:a.algorithm.name,iv:s,tagLength:128}).then(r=>{const i=t.arrayBufferToBase64(s)+t.arrayBufferToBase64(r);n(i)}).catch(r=>{o(r)})}else if(a.algorithm.name==="RSA-OAEP"){if(a.type!=="public")throw new TypeError("Expected input of wrappingKey to be a CryptoKey Object of type public");g.wrapKey(l,e,a,{name:"RSA-OAEP",hash:{name:a.algorithm.hash.name}}).then(s=>{const r=t.arrayBufferToBase64(s);n(r)}).catch(s=>{o(s)})}else throw new TypeError("Expected input of wrappingKey is not a supported key")})}decryptKey(a,e,t){const n=this;return typeof t>"u"&&(t={}),t.name=typeof t.name<"u"?t.name:"AES-GCM",t.isExtractable=typeof t.isExtractable<"u"?t.isExtractable:!0,new Promise((o,l)=>{if(Object.prototype.toString.call(a)!=="[object CryptoKey]")throw new TypeError("Expected input of unwrappingKey to be a CryptoKey Object");if(typeof e!="string")throw new TypeError("Expected input of encryptedKey to be a Base64 String");if(typeof t.name!="string")throw new TypeError("Expected input of options.name to be a String");if(typeof t.isExtractable!="boolean")throw new TypeError("Expected input of options.isExtractable to be a Boolean");const s={};if(s.name=t.name,t.name==="AES-GCM"||t.name==="AES-CBC"){if(t.type=typeof t.type<"u"?t.type:"raw",t.length=typeof t.length<"u"?t.length:256,t.usages=typeof t.usages<"u"?t.usages:["encrypt","decrypt","wrapKey","unwrapKey"],typeof t.length!="number")throw new TypeError("Expected input of options.length to be a Number")}else if(t.name==="ECDH"){if(t.type=typeof t.type<"u"?t.type:"pkcs8",t.namedCurve=typeof t.namedCurve<"u"?t.namedCurve:"P-256",t.usages=typeof t.usages<"u"?t.usages:["deriveKey","deriveBits"],typeof t.namedCurve!="string")throw new TypeError("Expected input of options.namedCurve to be a String");s.namedCurve=t.namedCurve}else if(t.name==="ECDSA"){if(t.type=typeof t.type<"u"?t.type:"pkcs8",t.namedCurve=typeof t.namedCurve<"u"?t.namedCurve:"P-256",t.usages=typeof t.usages<"u"?t.usages:["sign"],typeof t.namedCurve!="string")throw new TypeError("Expected input of options.namedCurve to be a String");s.namedCurve=t.namedCurve}else if(t.name==="RSA-OAEP"){if(t.type=typeof t.type<"u"?t.type:"pkcs8",t.hash=typeof t.hash<"u"?t.hash:"SHA-512",t.usages=typeof t.usages<"u"?t.usages:["decrypt","unwrapKey"],typeof t.hash!="string")throw new TypeError("Expected input of options.hash to be a String");s.hash={},s.hash.name=t.hash}else if(t.name==="RSA-PSS"){if(t.type=typeof t.type<"u"?t.type:"pkcs8",t.hash=typeof t.hash<"u"?t.hash:"SHA-512",t.usages=typeof t.usages<"u"?t.usages:["sign"],typeof t.hash!="string")throw new TypeError("Expected input of options.hash to be a String");s.hash={},s.hash.name=t.hash}else throw new TypeError("Expected input of options.name is not a valid algorithm name");if(typeof t.type!="string")throw new TypeError("Expected input of options.type to be a String");if(typeof t.usages!="object")throw new TypeError("Expected input of options.usages to be an Array");if(a.type==="secret"){let r=null,i=null;if(a.algorithm.name==="AES-GCM")r=e.substring(0,16),i=e.substring(16);else if(a.algorithm.name==="AES-CBC")r=e.substring(0,24),i=e.substring(24);else throw new TypeError("Cipher mode of the wrappingKey is not supported");const d=n.base64ToArrayBuffer(r),u=n.base64ToArrayBuffer(i);g.unwrapKey(t.type,u,a,{name:a.algorithm.name,iv:d,tagLength:128},s,t.isExtractable,t.usages).then(c=>{o(c)}).catch(c=>{l(c)})}else if(a.algorithm.name==="RSA-OAEP"){if(a.type!=="private")throw new TypeError("Expected input of unwrappingKey to be a CryptoKey Object of type private");const r=n.base64ToArrayBuffer(e);g.unwrapKey(t.type,r,a,{name:"RSA-OAEP",modulusLength:a.algorithm.modulusLength,publicExponent:new Uint8Array([1,0,1]),hash:{name:a.algorithm.hash.name}},s,t.isExtractable,t.usages).then(i=>{o(i)}).catch(i=>{l(i)})}else throw new TypeError("Expected input of unwrappingKey is not a supported key")})}signKey(a,e,t){const n=this;return typeof t>"u"&&(t={}),new Promise((o,l)=>{if(Object.prototype.toString.call(a)!=="[object CryptoKey]"&&a.type!=="private")throw new TypeError("Expected input of privateKey to be a CryptoKey Object of type private");if(Object.prototype.toString.call(e)!=="[object CryptoKey]")throw new TypeError("Expected input of key to be a CryptoKey Object");g.exportKey("raw",e).then(s=>{if(a.algorithm.name==="ECDSA"){if(t.hash=typeof t.hash<"u"?t.hash:"SHA-512",typeof t.hash!="string")throw new TypeError("Expected input of options.hash to be a String");g.sign({name:"ECDSA",hash:{name:t.hash}},a,s).then(r=>{const i=n.arrayBufferToBase64(r);o(i)}).catch(r=>{l(r)})}else if(a.algorithm.name==="RSA-PSS"){if(t.saltLength=typeof t.saltLength<"u"?t.saltLength:128,typeof t.saltLength!="number")throw new TypeError("Expected input of options.saltLength to be a Number");g.sign({name:"RSA-PSS",saltLength:t.saltLength},a,s).then(r=>{const i=n.arrayBufferToBase64(r);o(i)}).catch(r=>{l(r)})}else throw new TypeError("Expected input of privateKey is not a valid private key")}).catch(s=>{l(s)})})}verifyKey(a,e,t,n){const o=this;return typeof n>"u"&&(n={}),new Promise((l,s)=>{if(Object.prototype.toString.call(a)!=="[object CryptoKey]"&&a.type!=="public")throw new TypeError("Expected input of publicKey to be a CryptoKey Object of type public");if(Object.prototype.toString.call(e)!=="[object CryptoKey]")throw new TypeError("Expected input of key to be a CryptoKey Object");if(typeof t!="string")throw new TypeError("Expected input of signature to be a Base64 String");const r=o.base64ToArrayBuffer(t);g.exportKey("raw",e).then(i=>{if(a.algorithm.name==="ECDSA"){if(n.hash=typeof n.hash<"u"?n.hash:"SHA-512",typeof n.hash!="string")throw new TypeError("Expected input of options.hash to be a String");g.verify({name:"ECDSA",hash:{name:n.hash}},a,r,i).then(d=>{l(d)}).catch(d=>{s(d)})}else if(a.algorithm.name==="RSA-PSS")g.verify({name:"RSA-PSS",saltLength:128},a,r,i).then(d=>{l(d)}).catch(d=>{s(d)});else throw new TypeError("Expected input of publicKey is not a valid public key")}).catch(i=>{s(i)})})}sign(a,e,t){const n=this;return typeof t>"u"&&(t={}),new Promise((o,l)=>{if(Object.prototype.toString.call(a)!=="[object CryptoKey]"&&a.type!=="private")throw new TypeError("Expected input of privateKey to be a CryptoKey Object of type private");if(typeof e!="object")throw new TypeError("Expected input of data to be an ArrayBuffer");if(a.algorithm.name==="ECDSA"){if(t.hash=typeof t.hash<"u"?t.hash:"SHA-512",typeof t.hash!="string")throw new TypeError("Expected input of options.hash to be a String");g.sign({name:"ECDSA",hash:{name:t.hash}},a,e).then(s=>{const r=n.arrayBufferToBase64(s);o(r)}).catch(s=>{l(s)})}else if(a.algorithm.name==="RSA-PSS"){if(t.saltLength=typeof t.saltLength<"u"?t.saltLength:128,typeof t.saltLength!="number")throw new TypeError("Expected input of options.saltLength to be a Number");g.sign({name:"RSA-PSS",saltLength:t.saltLength},a,e).then(s=>{const r=n.arrayBufferToBase64(s);o(r)}).catch(s=>{l(s)})}else throw new TypeError("Expected input of privateKey is not a valid private key")})}verify(a,e,t,n){const o=this;return typeof n>"u"&&(n={}),new Promise((l,s)=>{if(Object.prototype.toString.call(a)!=="[object CryptoKey]"&&a.type!=="public")throw new TypeError("Expected input of publicKey to be a CryptoKey Object of type public");if(typeof e!="object")throw new TypeError("Expected input of data to be an ArrayBuffer");if(typeof t!="string")throw new TypeError("Expected input of signature to be a Base64 String");const r=o.base64ToArrayBuffer(t);if(a.algorithm.name==="ECDSA"){if(n.hash=typeof n.hash<"u"?n.hash:"SHA-512",typeof n.hash!="string")throw new TypeError("Expected input of options.hash to be a String");g.verify({name:"ECDSA",hash:{name:n.hash}},a,r,e).then(i=>{l(i)}).catch(i=>{s(i)})}else if(a.algorithm.name==="RSA-PSS")g.verify({name:"RSA-PSS",saltLength:128},a,r,e).then(i=>{l(i)}).catch(i=>{s(i)});else throw new TypeError("Expected input of publicKey is not a valid public key")})}encrypt(a,e){const t=this;return new Promise((n,o)=>{if(Object.prototype.toString.call(a)!=="[object CryptoKey]"&&a.type!=="secret")throw new TypeError("Expected input of sharedKey to be a CryptoKey Object");if(typeof e!="object")throw new TypeError("Expected input of data to be an ArrayBuffer");let l=null;if(a.algorithm.name==="AES-GCM")l=L.getRandomValues(new Uint8Array(12));else if(a.algorithm.name==="AES-CBC")l=L.getRandomValues(new Uint8Array(16));else throw new TypeError("Cipher mode of the sharedKey is not supported");g.encrypt({name:a.algorithm.name,iv:l,tagLength:128},a,e).then(s=>{const r=t.arrayBufferToBase64(l),i=t.arrayBufferToBase64(s);n(r+i)}).catch(s=>{o(s)})})}decrypt(a,e,t){const n=this;return typeof t>"u"&&(t={}),t.cipher=typeof t.cipher<"u"?t.cipher:"AES-GCM",new Promise((o,l)=>{if(Object.prototype.toString.call(a)!=="[object CryptoKey]"&&a.type!=="secret")throw new TypeError("Expected input of sharedKey to be a CryptoKey Object");if(typeof e!="string")throw new TypeError("Expected input of encryptedData to be a String");if(typeof t.cipher!="string")throw new TypeError("Expected input of options.cipher to be a String");let s=null,r=null;if(t.cipher==="AES-GCM")s=e.substring(0,16),r=e.substring(16);else if(t.cipher==="AES-CBC")s=e.substring(0,24),r=e.substring(24);else throw new TypeError("Cipher mode of the sharedKey is not supported");const i=n.base64ToArrayBuffer(s),d=n.base64ToArrayBuffer(r);g.decrypt({name:t.cipher,iv:i,tagLength:128},a,d).then(u=>{o(u)}).catch(u=>{l(u)})})}derivePassphraseKey(a,e,t,n){const o=this;return t=typeof t<"u"?t:64e3,typeof n>"u"&&(n={}),n.hash=typeof n.hash<"u"?n.hash:"SHA-512",n.length=typeof n.length<"u"?n.length:256,n.cipher=typeof n.cipher<"u"?n.cipher:"AES-GCM",n.usages=typeof n.usages<"u"?n.usages:["encrypt","decrypt","wrapKey","unwrapKey"],n.isExtractable=typeof n.isExtractable<"u"?n.isExtractable:!0,new Promise((l,s)=>{if(typeof a!="string")throw new TypeError("Expected input of passphrase to be a String");if(typeof e!="object")throw new TypeError("Expected input of salt to be an ArrayBuffer");if(typeof t!="number")throw new TypeError("Expected input of iterations to be a Number");if(typeof n.hash!="string")throw new TypeError("Expected input of options.hash to be a String");if(typeof n.length!="number")throw new TypeError("Expected input of options.length to be a Number");if(typeof n.cipher!="string")throw new TypeError("Expected input of options.cipher to be a String");if(typeof n.usages!="object")throw new TypeError("Expected input of options.usages to be an Array");if(typeof n.isExtractable!="boolean")throw new TypeError("Expected input of options.isExtractable to be a Boolean");const r=o.stringToArrayBuffer(a);g.importKey("raw",r,{name:"PBKDF2"},!1,["deriveKey"]).then(i=>{g.deriveKey({name:"PBKDF2",salt:e,iterations:t,hash:{name:n.hash}},i,{name:n.cipher,length:n.length},n.isExtractable,n.usages).then(d=>{l(d)}).catch(d=>{s(d)})}).catch(i=>{s(i)})})}hashPassphrase(a,e,t,n){const o=this;return t=typeof t<"u"?t:64e3,typeof n>"u"&&(n={}),n.hash=typeof n.hash<"u"?n.hash:"SHA-512",n.length=typeof n.length<"u"?n.length:256,n.cipher=typeof n.cipher<"u"?n.cipher:"AES-GCM",n.usages=typeof n.usages<"u"?n.usages:["encrypt","decrypt","wrapKey","unwrapKey"],n.isExtractable=typeof n.isExtractable<"u"?n.isExtractable:!0,new Promise((l,s)=>{if(typeof a!="string")throw new TypeError("Expected input of passphrase to be a String");if(typeof e!="object")throw new TypeError("Expected input of salt to be an ArrayBuffer");if(typeof t!="number")throw new TypeError("Expected input of iterations to be a Number");if(typeof n.hash!="string")throw new TypeError("Expected input of options.hash to be a String");if(typeof n.length!="number")throw new TypeError("Expected input of options.length to be a Number");if(typeof n.cipher!="string")throw new TypeError("Expected input of options.cipher to be a String");if(typeof n.usages!="object")throw new TypeError("Expected input of options.usages to be an Array");if(typeof n.isExtractable!="boolean")throw new TypeError("Expected input of options.isExtractable to be a Boolean");o.derivePassphraseKey(a,e,t,n).then(r=>{g.exportKey("raw",r).then(i=>{const d=o.arrayBufferToHexString(i);l(d)}).catch(i=>{s(i)})}).catch(r=>{s(r)})})}getFingerprint(a,e){const t=this;return typeof e>"u"&&(e={}),e.hash=typeof hash<"u"?hash:"SHA-512",e.isBuffer=typeof e.isBuffer<"u"?e.isBuffer:!1,new Promise((n,o)=>{if(Object.prototype.toString.call(a)!=="[object CryptoKey]")throw new TypeError("Expected input of key to be a CryptoKey Object");if(typeof e.hash!="string")throw new TypeError("Expected input of options.hash to be a String");if(typeof e.isBuffer!="boolean")throw new TypeError("Expected input of options.isBuffer to be a Boolean");let l=null;switch(a.type){case"secret":l="raw";break;case"private":l="pkcs8";break;case"public":l="spki"}g.exportKey(l,a).then(s=>{g.digest({name:e.hash},s).then(r=>{if(e.isBuffer)n(r);else{const i=t.arrayBufferToHexString(r);n(i)}}).catch(r=>{o(r)})}).catch(s=>{o(s)})})}getRandomBytes(a){return a=typeof a<"u"?a:16,new Promise((e,t)=>{if(typeof a!="number")throw new TypeError("Expected input of size to be a Number");const n=L.getRandomValues(new Uint8Array(a));e(n)})}}var te={exports:{}},it=te.exports,Ke;function lt(){return Ke||(Ke=1,function(p){(function(a,e,t){function n(r){var i=this,d=s();i.next=function(){var u=2091639*i.s0+i.c*23283064365386963e-26;return i.s0=i.s1,i.s1=i.s2,i.s2=u-(i.c=u|0)},i.c=1,i.s0=d(" "),i.s1=d(" "),i.s2=d(" "),i.s0-=d(r),i.s0<0&&(i.s0+=1),i.s1-=d(r),i.s1<0&&(i.s1+=1),i.s2-=d(r),i.s2<0&&(i.s2+=1),d=null}function o(r,i){return i.c=r.c,i.s0=r.s0,i.s1=r.s1,i.s2=r.s2,i}function l(r,i){var d=new n(r),u=i&&i.state,c=d.next;return c.int32=function(){return d.next()*4294967296|0},c.double=function(){return c()+(c()*2097152|0)*11102230246251565e-32},c.quick=c,u&&(typeof u=="object"&&o(u,d),c.state=function(){return o(d,{})}),c}function s(){var r=4022871197,i=function(d){d=String(d);for(var u=0;u<d.length;u++){r+=d.charCodeAt(u);var c=.02519603282416938*r;r=c>>>0,c-=r,c*=r,r=c>>>0,c-=r,r+=c*4294967296}return(r>>>0)*23283064365386963e-26};return i}e&&e.exports?e.exports=l:this.alea=l})(it,p)}(te)),te.exports}var re={exports:{}},ct=re.exports,$e;function ut(){return $e||($e=1,function(p){(function(a,e,t){function n(s){var r=this,i="";r.x=0,r.y=0,r.z=0,r.w=0,r.next=function(){var u=r.x^r.x<<11;return r.x=r.y,r.y=r.z,r.z=r.w,r.w^=r.w>>>19^u^u>>>8},s===(s|0)?r.x=s:i+=s;for(var d=0;d<i.length+64;d++)r.x^=i.charCodeAt(d)|0,r.next()}function o(s,r){return r.x=s.x,r.y=s.y,r.z=s.z,r.w=s.w,r}function l(s,r){var i=new n(s),d=r&&r.state,u=function(){return(i.next()>>>0)/4294967296};return u.double=function(){do var c=i.next()>>>11,f=(i.next()>>>0)/4294967296,h=(c+f)/(1<<21);while(h===0);return h},u.int32=i.next,u.quick=u,d&&(typeof d=="object"&&o(d,i),u.state=function(){return o(i,{})}),u}e&&e.exports?e.exports=l:this.xor128=l})(ct,p)}(re)),re.exports}var ae={exports:{}},dt=ae.exports,Le;function ft(){return Le||(Le=1,function(p){(function(a,e,t){function n(s){var r=this,i="";r.next=function(){var u=r.x^r.x>>>2;return r.x=r.y,r.y=r.z,r.z=r.w,r.w=r.v,(r.d=r.d+362437|0)+(r.v=r.v^r.v<<4^(u^u<<1))|0},r.x=0,r.y=0,r.z=0,r.w=0,r.v=0,s===(s|0)?r.x=s:i+=s;for(var d=0;d<i.length+64;d++)r.x^=i.charCodeAt(d)|0,d==i.length&&(r.d=r.x<<10^r.x>>>4),r.next()}function o(s,r){return r.x=s.x,r.y=s.y,r.z=s.z,r.w=s.w,r.v=s.v,r.d=s.d,r}function l(s,r){var i=new n(s),d=r&&r.state,u=function(){return(i.next()>>>0)/4294967296};return u.double=function(){do var c=i.next()>>>11,f=(i.next()>>>0)/4294967296,h=(c+f)/(1<<21);while(h===0);return h},u.int32=i.next,u.quick=u,d&&(typeof d=="object"&&o(d,i),u.state=function(){return o(i,{})}),u}e&&e.exports?e.exports=l:this.xorwow=l})(dt,p)}(ae)),ae.exports}var ne={exports:{}},pt=ne.exports,qe;function ht(){return qe||(qe=1,function(p){(function(a,e,t){function n(s){var r=this;r.next=function(){var d=r.x,u=r.i,c,f;return c=d[u],c^=c>>>7,f=c^c<<24,c=d[u+1&7],f^=c^c>>>10,c=d[u+3&7],f^=c^c>>>3,c=d[u+4&7],f^=c^c<<7,c=d[u+7&7],c=c^c<<13,f^=c^c<<9,d[u]=f,r.i=u+1&7,f};function i(d,u){var c,f=[];if(u===(u|0))f[0]=u;else for(u=""+u,c=0;c<u.length;++c)f[c&7]=f[c&7]<<15^u.charCodeAt(c)+f[c+1&7]<<13;for(;f.length<8;)f.push(0);for(c=0;c<8&&f[c]===0;++c);for(c==8?f[7]=-1:f[c],d.x=f,d.i=0,c=256;c>0;--c)d.next()}i(r,s)}function o(s,r){return r.x=s.x.slice(),r.i=s.i,r}function l(s,r){s==null&&(s=+new Date);var i=new n(s),d=r&&r.state,u=function(){return(i.next()>>>0)/4294967296};return u.double=function(){do var c=i.next()>>>11,f=(i.next()>>>0)/4294967296,h=(c+f)/(1<<21);while(h===0);return h},u.int32=i.next,u.quick=u,d&&(d.x&&o(d,i),u.state=function(){return o(i,{})}),u}e&&e.exports?e.exports=l:this.xorshift7=l})(pt,p)}(ne)),ne.exports}var se={exports:{}},yt=se.exports,Ue;function gt(){return Ue||(Ue=1,function(p){(function(a,e,t){function n(s){var r=this;r.next=function(){var d=r.w,u=r.X,c=r.i,f,h;return r.w=d=d+1640531527|0,h=u[c+34&127],f=u[c=c+1&127],h^=h<<13,f^=f<<17,h^=h>>>15,f^=f>>>12,h=u[c]=h^f,r.i=c,h+(d^d>>>16)|0};function i(d,u){var c,f,h,w,x,k=[],I=128;for(u===(u|0)?(f=u,u=null):(u=u+"\0",f=0,I=Math.max(I,u.length)),h=0,w=-32;w<I;++w)u&&(f^=u.charCodeAt((w+32)%u.length)),w===0&&(x=f),f^=f<<10,f^=f>>>15,f^=f<<4,f^=f>>>13,w>=0&&(x=x+1640531527|0,c=k[w&127]^=f+x,h=c==0?h+1:0);for(h>=128&&(k[(u&&u.length||0)&127]=-1),h=127,w=4*128;w>0;--w)f=k[h+34&127],c=k[h=h+1&127],f^=f<<13,c^=c<<17,f^=f>>>15,c^=c>>>12,k[h]=f^c;d.w=x,d.X=k,d.i=h}i(r,s)}function o(s,r){return r.i=s.i,r.w=s.w,r.X=s.X.slice(),r}function l(s,r){s==null&&(s=+new Date);var i=new n(s),d=r&&r.state,u=function(){return(i.next()>>>0)/4294967296};return u.double=function(){do var c=i.next()>>>11,f=(i.next()>>>0)/4294967296,h=(c+f)/(1<<21);while(h===0);return h},u.int32=i.next,u.quick=u,d&&(d.X&&o(d,i),u.state=function(){return o(i,{})}),u}e&&e.exports?e.exports=l:this.xor4096=l})(yt,p)}(se)),se.exports}var oe={exports:{}},mt=oe.exports,Fe;function bt(){return Fe||(Fe=1,function(p){(function(a,e,t){function n(s){var r=this,i="";r.next=function(){var u=r.b,c=r.c,f=r.d,h=r.a;return u=u<<25^u>>>7^c,c=c-f|0,f=f<<24^f>>>8^h,h=h-u|0,r.b=u=u<<20^u>>>12^c,r.c=c=c-f|0,r.d=f<<16^c>>>16^h,r.a=h-u|0},r.a=0,r.b=0,r.c=-1640531527,r.d=1367130551,s===Math.floor(s)?(r.a=s/4294967296|0,r.b=s|0):i+=s;for(var d=0;d<i.length+20;d++)r.b^=i.charCodeAt(d)|0,r.next()}function o(s,r){return r.a=s.a,r.b=s.b,r.c=s.c,r.d=s.d,r}function l(s,r){var i=new n(s),d=r&&r.state,u=function(){return(i.next()>>>0)/4294967296};return u.double=function(){do var c=i.next()>>>11,f=(i.next()>>>0)/4294967296,h=(c+f)/(1<<21);while(h===0);return h},u.int32=i.next,u.quick=u,d&&(typeof d=="object"&&o(d,i),u.state=function(){return o(i,{})}),u}e&&e.exports?e.exports=l:this.tychei=l})(mt,p)}(oe)),oe.exports}var ie={exports:{}},wt=ie.exports,Me;function Et(){return Me||(Me=1,function(p){(function(a,e,t){var n=256,o=6,l=52,s="random",r=t.pow(n,o),i=t.pow(2,l),d=i*2,u=n-1,c;function f(m,E,O){var A=[];E=E==!0?{entropy:!0}:E||{};var S=k(x(E.entropy?[m,P(e)]:m??I(),3),A),B=new h(A),R=function(){for(var H=B.g(o),$=r,K=0;H<i;)H=(H+K)*n,$*=n,K=B.g(1);for(;H>=d;)H/=2,$/=2,K>>>=1;return(H+K)/$};return R.int32=function(){return B.g(4)|0},R.quick=function(){return B.g(4)/4294967296},R.double=R,k(P(B.S),e),(E.pass||O||function(H,$,K,q){return q&&(q.S&&w(q,B),H.state=function(){return w(B,{})}),K?(t[s]=H,$):H})(R,S,"global"in E?E.global:this==t,E.state)}function h(m){var E,O=m.length,A=this,S=0,B=A.i=A.j=0,R=A.S=[];for(O||(m=[O++]);S<n;)R[S]=S++;for(S=0;S<n;S++)R[S]=R[B=u&B+m[S%O]+(E=R[S])],R[B]=E;(A.g=function(H){for(var $,K=0,q=A.i,J=A.j,X=A.S;H--;)$=X[q=u&q+1],K=K*n+X[u&(X[q]=X[J=u&J+$])+(X[J]=$)];return A.i=q,A.j=J,K})(n)}function w(m,E){return E.i=m.i,E.j=m.j,E.S=m.S.slice(),E}function x(m,E){var O=[],A=typeof m,S;if(E&&A=="object")for(S in m)try{O.push(x(m[S],E-1))}catch{}return O.length?O:A=="string"?m:m+"\0"}function k(m,E){for(var O=m+"",A,S=0;S<O.length;)E[u&S]=u&(A^=E[u&S]*19)+O.charCodeAt(S++);return P(E)}function I(){try{var m;return c&&(m=c.randomBytes)?m=m(n):(m=new Uint8Array(n),(a.crypto||a.msCrypto).getRandomValues(m)),P(m)}catch{var E=a.navigator,O=E&&E.plugins;return[+new Date,a,O,a.screen,P(e)]}}function P(m){return String.fromCharCode.apply(0,m)}if(k(t.random(),e),p.exports){p.exports=f;try{c=Ye}catch{}}else t["seed"+s]=f})(typeof self<"u"?self:wt,[],Math)}(ie)),ie.exports}var Te,Ge;function xt(){if(Ge)return Te;Ge=1;var p=lt(),a=ut(),e=ft(),t=ht(),n=gt(),o=bt(),l=Et();return l.alea=p,l.xor128=a,l.xorwow=e,l.xorshift7=t,l.xor4096=n,l.tychei=o,Te=l,Te}var vt=xt();const St=Xe(vt),ue=["ability","able","aboard","about","above","accept","accident","according","account","accurate","acres","across","act","action","active","activity","actual","actually","add","addition","additional","adjective","adult","adventure","advice","affect","afraid","after","afternoon","again","against","age","ago","agree","ahead","aid","air","airplane","alike","alive","all","allow","almost","alone","along","aloud","alphabet","already","also","although","am","among","amount","ancient","angle","angry","animal","announced","another","answer","ants","any","anybody","anyone","anything","anyway","anywhere","apart","apartment","appearance","apple","applied","appropriate","are","area","arm","army","around","arrange","arrangement","arrive","arrow","art","article","as","aside","ask","asleep","at","ate","atmosphere","atom","atomic","attached","attack","attempt","attention","audience","author","automobile","available","average","avoid","aware","away","baby","back","bad","badly","bag","balance","ball","balloon","band","bank","bar","bare","bark","barn","base","baseball","basic","basis","basket","bat","battle","be","bean","bear","beat","beautiful","beauty","became","because","become","becoming","bee","been","before","began","beginning","begun","behavior","behind","being","believed","bell","belong","below","belt","bend","beneath","bent","beside","best","bet","better","between","beyond","bicycle","bigger","biggest","bill","birds","birth","birthday","bit","bite","black","blank","blanket","blew","blind","block","blood","blow","blue","board","boat","body","bone","book","border","born","both","bottle","bottom","bound","bow","bowl","box","boy","brain","branch","brass","brave","bread","break","breakfast","breath","breathe","breathing","breeze","brick","bridge","brief","bright","bring","broad","broke","broken","brother","brought","brown","brush","buffalo","build","building","built","buried","burn","burst","bus","bush","business","busy","but","butter","buy","by","cabin","cage","cake","call","calm","came","camera","camp","can","canal","cannot","cap","capital","captain","captured","car","carbon","card","care","careful","carefully","carried","carry","case","cast","castle","cat","catch","cattle","caught","cause","cave","cell","cent","center","central","century","certain","certainly","chain","chair","chamber","chance","change","changing","chapter","character","characteristic","charge","chart","check","cheese","chemical","chest","chicken","chief","child","children","choice","choose","chose","chosen","church","circle","circus","citizen","city","class","classroom","claws","clay","clean","clear","clearly","climate","climb","clock","close","closely","closer","cloth","clothes","clothing","cloud","club","coach","coal","coast","coat","coffee","cold","collect","college","colony","color","column","combination","combine","come","comfortable","coming","command","common","community","company","compare","compass","complete","completely","complex","composed","composition","compound","concerned","condition","congress","connected","consider","consist","consonant","constantly","construction","contain","continent","continued","contrast","control","conversation","cook","cookies","cool","copper","copy","corn","corner","correct","correctly","cost","cotton","could","count","country","couple","courage","course","court","cover","cow","cowboy","crack","cream","create","creature","crew","crop","cross","crowd","cry","cup","curious","current","curve","customs","cut","cutting","daily","damage","dance","danger","dangerous","dark","darkness","date","daughter","dawn","day","dead","deal","dear","death","decide","declared","deep","deeply","deer","definition","degree","depend","depth","describe","desert","design","desk","detail","determine","develop","development","diagram","diameter","did","die","differ","difference","different","difficult","difficulty","dig","dinner","direct","direction","directly","dirt","dirty","disappear","discover","discovery","discuss","discussion","disease","dish","distance","distant","divide","division","do","doctor","does","dog","doing","doll","dollar","done","donkey","door","dot","double","doubt","down","dozen","draw","drawn","dream","dress","drew","dried","drink","drive","driven","driver","driving","drop","dropped","drove","dry","duck","due","dug","dull","during","dust","duty","each","eager","ear","earlier","early","earn","earth","easier","easily","east","easy","eat","eaten","edge","education","effect","effort","egg","eight","either","electric","electricity","element","elephant","eleven","else","empty","end","enemy","energy","engine","engineer","enjoy","enough","enter","entire","entirely","environment","equal","equally","equator","equipment","escape","especially","essential","establish","even","evening","event","eventually","ever","every","everybody","everyone","everything","everywhere","evidence","exact","exactly","examine","example","excellent","except","exchange","excited","excitement","exciting","exclaimed","exercise","exist","expect","experience","experiment","explain","explanation","explore","express","expression","extra","eye","face","facing","fact","factor","factory","failed","fair","fairly","fall","fallen","familiar","family","famous","far","farm","farmer","farther","fast","fastened","faster","fat","father","favorite","fear","feathers","feature","fed","feed","feel","feet","fell","fellow","felt","fence","few","fewer","field","fierce","fifteen","fifth","fifty","fight","fighting","figure","fill","film","final","finally","find","fine","finest","finger","finish","fire","fireplace","firm","first","fish","five","fix","flag","flame","flat","flew","flies","flight","floating","floor","flow","flower","fly","fog","folks","follow","food","foot","football","for","force","foreign","forest","forget","forgot","forgotten","form","former","fort","forth","forty","forward","fought","found","four","fourth","fox","frame","free","freedom","frequently","fresh","friend","friendly","frighten","frog","from","front","frozen","fruit","fuel","full","fully","fun","function","funny","fur","furniture","further","future","gain","game","garage","garden","gas","gasoline","gate","gather","gave","general","generally","gentle","gently","get","getting","giant","gift","girl","give","given","giving","glad","glass","globe","go","goes","gold","golden","gone","good","goose","got","government","grabbed","grade","gradually","grain","grandfather","grandmother","graph","grass","gravity","gray","great","greater","greatest","greatly","green","grew","ground","group","grow","grown","growth","guard","guess","guide","gulf","gun","habit","had","hair","half","halfway","hall","hand","handle","handsome","hang","happen","happened","happily","happy","harbor","hard","harder","hardly","has","hat","have","having","hay","he","headed","heading","health","heard","hearing","heart","heat","heavy","height","held","hello","help","helpful","her","herd","here","herself","hidden","hide","high","higher","highest","highway","hill","him","himself","his","history","hit","hold","hole","hollow","home","honor","hope","horn","horse","hospital","hot","hour","house","how","however","huge","human","hundred","hung","hungry","hunt","hunter","hurried","hurry","hurt","husband","ice","idea","identity","if","ill","image","imagine","immediately","importance","important","impossible","improve","in","inch","include","including","income","increase","indeed","independent","indicate","individual","industrial","industry","influence","information","inside","instance","instant","instead","instrument","interest","interior","into","introduced","invented","involved","iron","is","island","it","its","itself","jack","jar","jet","job","join","joined","journey","joy","judge","jump","jungle","just","keep","kept","key","kids","kill","kind","kitchen","knew","knife","know","knowledge","known","label","labor","lack","lady","laid","lake","lamp","land","language","large","larger","largest","last","late","later","laugh","law","lay","layers","lead","leader","leaf","learn","least","leather","leave","leaving","led","left","leg","length","lesson","let","letter","level","library","lie","life","lift","light","like","likely","limited","line","lion","lips","liquid","list","listen","little","live","living","load","local","locate","location","log","lonely","long","longer","look","loose","lose","loss","lost","lot","loud","love","lovely","low","lower","luck","lucky","lunch","lungs","lying","machine","machinery","mad","made","magic","magnet","mail","main","mainly","major","make","making","man","managed","manner","manufacturing","many","map","mark","market","married","mass","massage","master","material","mathematics","matter","may","maybe","me","meal","mean","means","meant","measure","meat","medicine","meet","melted","member","memory","men","mental","merely","met","metal","method","mice","middle","might","mighty","mile","military","milk","mill","mind","mine","minerals","minute","mirror","missing","mission","mistake","mix","mixture","model","modern","molecular","moment","money","monkey","month","mood","moon","more","morning","most","mostly","mother","motion","motor","mountain","mouse","mouth","move","movement","movie","moving","mud","muscle","music","musical","must","my","myself","mysterious","nails","name","nation","national","native","natural","naturally","nature","near","nearby","nearer","nearest","nearly","necessary","neck","needed","needle","needs","negative","neighbor","neighborhood","nervous","nest","never","new","news","newspaper","next","nice","night","nine","no","nobody","nodded","noise","none","noon","nor","north","nose","not","note","noted","nothing","notice","noun","now","number","numeral","nuts","object","observe","obtain","occasionally","occur","ocean","of","off","offer","office","officer","official","oil","old","older","oldest","on","once","one","only","onto","open","operation","opinion","opportunity","opposite","or","orange","orbit","order","ordinary","organization","organized","origin","original","other","ought","our","ourselves","out","outer","outline","outside","over","own","owner","oxygen","pack","package","page","paid","pain","paint","pair","palace","pale","pan","paper","paragraph","parallel","parent","park","part","particles","particular","particularly","partly","parts","party","pass","passage","past","path","pattern","pay","peace","pen","pencil","people","per","percent","perfect","perfectly","perhaps","period","person","personal","pet","phrase","physical","piano","pick","picture","pictured","pie","piece","pig","pile","pilot","pine","pink","pipe","pitch","place","plain","plan","plane","planet","planned","planning","plant","plastic","plate","plates","play","pleasant","please","pleasure","plenty","plural","plus","pocket","poem","poet","poetry","point","pole","police","policeman","political","pond","pony","pool","poor","popular","population","porch","port","position","positive","possible","possibly","post","pot","potatoes","pound","pour","powder","power","powerful","practical","practice","prepare","present","president","press","pressure","pretty","prevent","previous","price","pride","primitive","principal","principle","printed","private","prize","probably","problem","process","produce","product","production","program","progress","promised","proper","properly","property","protection","proud","prove","provide","public","pull","pupil","pure","purple","purpose","push","put","putting","quarter","queen","question","quick","quickly","quiet","quietly","quite","rabbit","race","radio","railroad","rain","raise","ran","ranch","range","rapidly","rate","rather","raw","rays","reach","read","reader","ready","real","realize","rear","reason","recall","receive","recent","recently","recognize","record","red","refer","refused","region","regular","related","relationship","religious","remain","remarkable","remember","remove","repeat","replace","replied","report","represent","require","research","respect","rest","result","return","review","rhyme","rhythm","rice","rich","ride","riding","right","ring","rise","rising","river","road","roar","rock","rocket","rocky","rod","roll","roof","room","root","rope","rose","rough","round","route","row","rubbed","rubber","rule","ruler","run","running","rush","sad","saddle","safe","safety","said","sail","sale","salmon","salt","same","sand","sang","sat","satellites","satisfied","save","saved","saw","say","scale","scared","scene","school","science","scientific","scientist","score","screen","sea","search","season","seat","second","secret","section","see","seed","seeing","seems","seen","seldom","select","selection","sell","send","sense","sent","sentence","separate","series","serious","serve","service","sets","setting","settle","settlers","seven","several","shade","shadow","shake","shaking","shall","shallow","shape","share","sharp","she","sheep","sheet","shelf","shells","shelter","shine","shinning","ship","shirt","shoe","shoot","shop","shore","short","shorter","shot","should","shoulder","shout","show","shown","shut","sick","sides","sight","sign","signal","silence","silent","silk","silly","silver","similar","simple","simplest","simply","since","sing","single","sink","sister","sit","sitting","situation","six","size","skill","skin","sky","slabs","slave","sleep","slept","slide","slight","slightly","slip","slipped","slope","slow","slowly","small","smaller","smallest","smell","smile","smoke","smooth","snake","snow","so","soap","social","society","soft","softly","soil","solar","sold","soldier","solid","solution","solve","some","somebody","somehow","someone","something","sometime","somewhere","son","song","soon","sort","sound","source","south","southern","space","speak","special","species","specific","speech","speed","spell","spend","spent","spider","spin","spirit","spite","split","spoken","sport","spread","spring","square","stage","stairs","stand","standard","star","stared","start","state","statement","station","stay","steady","steam","steel","steep","stems","step","stepped","stick","stiff","still","stock","stomach","stone","stood","stop","stopped","store","storm","story","stove","straight","strange","stranger","straw","stream","street","strength","stretch","strike","string","strip","strong","stronger","struck","structure","struggle","stuck","student","studied","studying","subject","substance","success","successful","such","sudden","suddenly","sugar","suggest","suit","sum","summer","sun","sunlight","supper","supply","support","suppose","sure","surface","surprise","surrounded","swam","sweet","swept","swim","swimming","swing","swung","syllable","symbol","system","table","tail","take","taken","tales","talk","tall","tank","tape","task","taste","taught","tax","tea","teach","teacher","team","tears","teeth","telephone","television","tell","temperature","ten","tent","term","terrible","test","than","thank","that","thee","them","themselves","then","theory","there","therefore","these","they","thick","thin","thing","think","third","thirty","this","those","thou","though","thought","thousand","thread","three","threw","throat","through","throughout","throw","thrown","thumb","thus","thy","tide","tie","tight","tightly","till","time","tin","tiny","tip","tired","title","to","tobacco","today","together","told","tomorrow","tone","tongue","tonight","too","took","tool","top","topic","torn","total","touch","toward","tower","town","toy","trace","track","trade","traffic","trail","train","transportation","trap","travel","treated","tree","triangle","tribe","trick","tried","trip","troops","tropical","trouble","truck","trunk","truth","try","tube","tune","turn","twelve","twenty","twice","two","type","typical","uncle","under","underline","understanding","unhappy","union","unit","universe","unknown","unless","until","unusual","up","upon","upper","upward","us","use","useful","using","usual","usually","valley","valuable","value","vapor","variety","various","vast","vegetable","verb","vertical","very","vessels","victory","view","village","visit","visitor","voice","volume","vote","vowel","voyage","wagon","wait","walk","wall","want","war","warm","warn","was","wash","waste","watch","water","wave","way","we","weak","wealth","wear","weather","week","weigh","weight","welcome","well","went","were","west","western","wet","whale","what","whatever","wheat","wheel","when","whenever","where","wherever","whether","which","while","whispered","whistle","white","who","whole","whom","whose","why","wide","widely","wife","wild","will","willing","win","wind","window","wing","winter","wire","wise","wish","with","within","without","wolf","women","won","wonder","wonderful","wood","wooden","wool","word","wore","work","worker","world","worried","worry","worse","worth","would","wrapped","write","writer","writing","written","wrong","wrote","yard","year","yellow","yes","yesterday","yet","you","young","younger","your","yourself","youth","zero","zebra","zipper","zoo","zulu"],Ce=ue.reduce((p,a)=>a.length<p.length?a:p).length,ke=ue.reduce((p,a)=>a.length>p.length?a:p).length;function At(p){const a=p!=null&&p.seed?new St(p.seed):null,{minLength:e,maxLength:t,...n}=p||{};function o(){let f=typeof e!="number"?Ce:s(e);const h=typeof t!="number"?ke:s(t);f>h&&(f=h);let w=!1,x;for(;!w;)x=l(),w=x.length<=h&&x.length>=f;return x}function l(){return ue[r(ue.length)]}function s(f){return f<Ce&&(f=Ce),f>ke&&(f=ke),f}function r(f){const h=a?a():Math.random();return Math.floor(h*f)}if(p===void 0)return o();if(typeof p=="number")p={exactly:p};else if(Object.keys(n).length===0)return o();p.exactly&&(p.min=p.exactly,p.max=p.exactly),typeof p.wordsPerString!="number"&&(p.wordsPerString=1),typeof p.formatter!="function"&&(p.formatter=f=>f),typeof p.separator!="string"&&(p.separator=" ");const i=p.min+r(p.max+1-p.min);let d=[],u="",c=0;for(let f=0;f<i*p.wordsPerString;f++)c===p.wordsPerString-1?u+=p.formatter(o(),c):u+=p.formatter(o(),c)+p.separator,c++,(f+1)%p.wordsPerString===0&&(d.push(u),u="",c=0);return typeof p.join=="string"&&(d=d.join(p.join)),d}class Ve{validatePassphrase(a){if(a!=null&&a.length<8)throw new Error("Passphrase must be at least 8 characters")}arrayBufferToHex(a){return Array.from(new Uint8Array(a)).map(e=>e.toString(16).padStart(2,"0")).join("")}hexToArrayBuffer(a){const e=new Uint8Array(a.length/2);for(let t=0;t<a.length;t+=2)e[t/2]=parseInt(a.slice(t,t+2),16);return e.buffer}async generateRandomString(a){const t=await new Ae().getRandomBytes(a);return this.arrayBufferToHex(t)}generatePasssphrase(){return At({exactly:8,join:"-"})}async encryptMessage(a,e=null){this.validatePassphrase(e);const t=new Ae;e=e||this.generatePasssphrase();const n=await t.getRandomBytes(8),o=await t.derivePassphraseKey(e,n,64e3);var l=new TextEncoder;const s=await t.encrypt(o,l.encode(a)),r=this.arrayBufferToHex(n)+s;return{passphrase:e,secret:r}}async decryptMessage(a,e){this.validatePassphrase(e);const t=new Ae,n=this.hexToArrayBuffer(a.slice(0,16));a=a.slice(16);const o=await t.derivePassphraseKey(e,n,64e3);var l=new TextDecoder;const s=await t.decrypt(o,a),r=l.decode(s);if(r.length>0)return r;throw new Error("Could not decrypt message. Password might be wrong. Message destroyed.")}}const Tt={class:"mt-5 md:mt-0 md:col-span-2 opacity-95"},Ct={class:"grid grid-cols-6 gap-6"},kt={key:0,class:"flex items-center justify-end px-4 py-3 bg-gray-50 dark:bg-gray-800 text-end sm:px-6 shadow sm:rounded-bl-md sm:rounded-br-md"},Bt={__name:"FlatFormSection",emits:["submitted"],setup(p){const a=le(()=>!!We().actions);return(e,t)=>(b(),C("div",Tt,[y("form",{onSubmit:t[0]||(t[0]=Z(n=>e.$emit("submitted"),["prevent"]))},[y("div",{class:M(["px-4 py-5 bg-gray-50 dark:bg-gray-900 sm:p-6 shadow",a.value?"sm:rounded-tl-md sm:rounded-tr-md":"sm:rounded-md"])},[y("div",Ct,[Y(e.$slots,"form")])],2),a.value?(b(),C("div",kt,[Y(e.$slots,"actions")])):j("",!0)],32)]))}},_t={},Pt={class:"mt-5 md:mt-0 md:col-span-2 opacity-95"},Ot={class:"px-4 py-5 sm:p-6 bg-white dark:bg-gray-900 shadow sm:rounded-lg"};function Nt(p,a){return b(),C("div",Pt,[y("div",Ot,[Y(p.$slots,"default")])])}const It=at(_t,[["render",Nt]]),Ht={class:"my-4"},Dt={class:"text-lg font-bold dark:text-white"},F={__name:"Faq",props:{question:String,message:String},setup(p){return(a,e)=>(b(),C("div",Ht,[y("h6",Dt,U(p.question),1),y("span",null,[Y(a.$slots,"default")])]))}},jt=["value"],Rt=["value"],Kt={__name:"SelectInput",props:{modelValue:String,options:Array},emits:["update:modelValue"],setup(p,{expose:a}){const e=G(null);return ze(()=>{e.value.hasAttribute("autofocus")&&e.value.focus()}),a({focus:()=>e.value.focus()}),(t,n)=>(b(),C("select",{ref_key:"input",ref:e,class:"border-gray-300 dark:border-gray-700 dark:bg-gray-700 dark:text-gray-200 focus:border-gray-500 dark:focus:border-gray-600 focus:ring-gray-500 dark:focus:ring-gray-600 rounded-md shadow-sm",value:p.modelValue,onInput:n[0]||(n[0]=o=>t.$emit("update:modelValue",o.target.value))},[(b(!0),C(ce,null,Ze(p.options,o=>(b(),C("option",{key:o,value:o.value},U(o.label),9,Rt))),128))],40,jt))}},$t={class:"w-full"},Lt={class:"relative"},qt={key:0,id:"default-icon"},Ut={key:1,id:"success-icon",class:"inline-flex items-center"},Qe={__name:"CodeBlock",props:{value:String},setup(p){const a=p,e=G(null),t=G(!1),n=o=>{navigator.clipboard.writeText(o),t.value=!0,setTimeout(()=>t.value=!1,1e3)};return(o,l)=>(b(),C("div",$t,[y("div",Lt,[l[3]||(l[3]=y("label",{for:"npm-install-copy-button",class:"sr-only"},"Label",-1)),y("code",{ref_key:"text",ref:e,class:"col-span-6 bg-gray-50 border border-gray-300 text-gray-500 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-gray-400 dark:focus:ring-blue-500 dark:focus:border-blue-500",disabled:"",readonly:""},[Y(o.$slots,"default",{},()=>[_(U(a.value),1)])],512),y("button",{type:"button",onClick:l[0]||(l[0]=Z(s=>n(e.value.innerText),["prevent"])),"data-tooltip-target":"tooltip-copy-npm-install-copy-button",class:"absolute end-2 top-3/4 -translate-y-1/2 text-gray-500 dark:text-gray-400 hover:bg-gray-100 dark:hover:bg-gray-800 rounded-lg p-2 inline-flex items-center justify-center"},[t.value?j("",!0):(b(),C("span",qt,l[1]||(l[1]=[y("svg",{class:"w-3.5 h-3.5","aria-hidden":"true",xmlns:"http://www.w3.org/2000/svg",fill:"currentColor",viewBox:"0 0 18 20"},[y("path",{d:"M16 1h-3.278A1.992 1.992 0 0 0 11 0H7a1.993 1.993 0 0 0-1.722 1H2a2 2 0 0 0-2 2v15a2 2 0 0 0 2 2h14a2 2 0 0 0 2-2V3a2 2 0 0 0-2-2Zm-3 14H5a1 1 0 0 1 0-2h8a1 1 0 0 1 0 2Zm0-4H5a1 1 0 0 1 0-2h8a1 1 0 1 1 0 2Zm0-5H5a1 1 0 0 1 0-2h2V2h4v2h2a1 1 0 1 1 0 2Z"})],-1)]))),t.value?(b(),C("span",Ut,l[2]||(l[2]=[y("svg",{class:"w-3.5 h-3.5 text-blue-700 dark:text-blue-500","aria-hidden":"true",xmlns:"http://www.w3.org/2000/svg",fill:"none",viewBox:"0 0 16 12"},[y("path",{stroke:"currentColor","stroke-linecap":"round","stroke-linejoin":"round","stroke-width":"2",d:"M1 5.917 5.724 10.5 15 1.5"})],-1)]))):j("",!0)]),l[4]||(l[4]=y("div",{id:"tooltip-copy-npm-install-copy-button",role:"tooltip",class:"absolute z-10 invisible inline-block px-3 py-2 text-sm font-medium text-white transition-opacity duration-300 bg-gray-900 rounded-lg shadow-sm opacity-0 tooltip dark:bg-gray-700"},[y("span",{id:"default-tooltip-message"},"Copy to clipboard"),y("span",{id:"success-tooltip-message",class:"hidden"},"Copied!"),y("div",{class:"tooltip-arrow","data-popper-arrow":""})],-1))])]))}},Ft={class:"sr-only"},Mt={key:0,class:"font-medium"},Be={__name:"Alert",props:{type:{type:String,default:"info"},message:{type:String,default:""},hideTitle:{type:Boolean,default:!1}},setup(p){const a=p,e={"flex items-center p-4 mb-4 text-sm text-green-800 rounded-lg bg-green-50 dark:bg-gray-800 dark:text-green-400":a.type=="Success","flex items-center p-4 mb-4 text-sm text-red-800 rounded-lg bg-red-50 dark:bg-gray-800 dark:text-red-400":a.type=="Error","flex items-center p-4 mb-4 text-sm text-yellow-800 rounded-lg bg-yellow-50 dark:bg-gray-800 dark:text-yellow-300":a.type=="Warning","flex items-center p-4 mb-4 text-sm text-blue-800 rounded-lg bg-blue-50 dark:bg-gray-800 dark:text-blue-400":a.type=="Info"};return(t,n)=>(b(),C("div",{class:M(e),role:"alert"},[n[1]||(n[1]=y("svg",{class:"flex-shrink-0 inline w-4 h-4 me-3","aria-hidden":"true",xmlns:"http://www.w3.org/2000/svg",fill:"currentColor",viewBox:"0 0 20 20"},[y("path",{d:"M10 .5a9.5 9.5 0 1 0 9.5 9.5A9.51 9.51 0 0 0 10 .5ZM9.5 4a1.5 1.5 0 1 1 0 3 1.5 1.5 0 0 1 0-3ZM12 15H8a1 1 0 0 1 0-2h1v-3H8a1 1 0 0 1 0-2h2a1 1 0 0 1 1 1v4h1a1 1 0 0 1 0 2Z"})],-1)),y("span",Ft,U(a.type),1),y("div",null,[p.hideTitle?j("",!0):(b(),C("span",Mt,U(a.type),1)),n[0]||(n[0]=_()),Y(t.$slots,"default",{},()=>[_(U(a.message),1)])])]))}},Gt={class:"col-span-12"},Vt={key:0,class:"col-span-12"},Qt={class:"col-span-12"},zt={class:"col-span-12"},Yt={class:"flex flex-wrap sm:flex-nowrap gap-2 sm:space-y-0 sm:space-y-0"},Xt={class:"w-full"},Wt={key:0},Zt={key:0},Jt={key:1},er={__name:"Secret",props:{secret:{type:String,default:null},decryptUrl:{type:String,default:null}},setup(p){const a=()=>{n.message="",n.expires_in=V().props.config.secrets.expiry,l.password=null,Je.reload()},e=p,t=G(null),n=de({message:e.secret?"This isn’t the actual message—it’s just a placeholder. To view the message, please click the button below.":"",expires_in:V().props.config.secrets.expiry}),o=de({}),l=de({password:null}),s=le(()=>{var u,c;return e.secret&&!((c=(u=V().props.jetstream.flash)==null?void 0:u.secret)!=null&&c.message)?"mt-1 block w-full blur-sm":"mt-1 block w-full"});G("password");const r=()=>{if(n.message==null||n.message.length==0){n.setError("message","Please enter a message.");return}new Ve().encryptMessage(n.message,l.password).then(c=>{n.transform(f=>({...f,message:c.secret})).post(route("secret.store"),{onSuccess:()=>{c.passphrase!=l.password&&(l.password=c.passphrase)}})}).catch(c=>{l.setError("password",c.message)})},i=le(()=>e.secret==null?"Enter a passsword, or leave blank to auto generate a password for you.":"Enter your password to decrypt the message.");G(!1);const d=()=>{const u=new Ve;o.get(e.decryptUrl,{preserveScroll:!0,preserveState:!0,onSuccess:()=>{var c,f;if(!((c=V().props.jetstream.flash)!=null&&c.error)&&((f=V().props.jetstream.flash)==null?void 0:f.error)!=404){const h=V().props.jetstream.flash.secret.message,w=l.password;u.decryptMessage(h,w).then(x=>{n.message=x}).catch(x=>{n.setError("message",x.message)})}},onError:()=>{n.setError("message","Could not get your message. Either the password was wrong, or the message is already expired, or the message was already retrieved. You have no more attempts.")}})};return(u,c)=>{var f,h;return b(),C(ce,null,[N(Bt,null,{title:T(()=>c[3]||(c[3]=[_(" FlashView ")])),form:T(()=>{var w,x,k,I,P,m,E,O,A,S;return[y("div",Gt,[e.secret!=null?(b(),D(Be,{key:0,type:"Warning","hide-title":""},{default:T(()=>c[4]||(c[4]=[y("div",{class:"mb-2"}," You can attempt to retrieve this message ONLY ONCE. ",-1),y("ol",{class:"space-y-1 list-decimal list-inside"},[y("li",null,"Wrong password will result in the message being deleted."),y("li",null,"Correct password will show the message, and the message will be deleted."),y("li",null,"Message will be deleted after the expiration time.")],-1)])),_:1})):j("",!0),u.$page.props.jetstream.flash.error==404?(b(),D(Be,{key:1,"hide-title":"",type:"Error"},{default:T(()=>c[5]||(c[5]=[_(" This message has expired or has already been retrieved. ")])),_:1})):j("",!0)]),(x=(w=u.$page.props.jetstream.flash)==null?void 0:w.secret)!=null&&x.url?(b(),C("div",Vt,[N(Be,{"hide-title":"",type:"Success"},{default:T(()=>c[6]||(c[6]=[_(" Please share the link and password separately to the recipient. The message can be retrieved only once and only with both the link and the password. If you wish to prematurely delete the message, you may visit the link and enter any random password and click retrieve. ")])),_:1})])):j("",!0),y("div",Qt,[(I=(k=u.$page.props.jetstream.flash)==null?void 0:k.secret)!=null&&I.url?(b(),D(Qe,{key:0,value:(m=(P=u.$page.props.jetstream.flash)==null?void 0:P.secret)==null?void 0:m.url,class:"break-words"},null,8,["value"])):(b(),D(ot,{key:1,autofocus:e.secret==null,id:"message",rows:"7",modelValue:v(n).message,"onUpdate:modelValue":c[0]||(c[0]=B=>v(n).message=B),type:"text",class:M(s.value),placeholder:"Your secret message..."},null,8,["autofocus","modelValue","class"])),N(pe,{message:v(n).errors.message,class:"mt-2"},null,8,["message"])]),y("div",zt,[y("div",Yt,[y("div",Xt,[(O=(E=u.$page.props.jetstream.flash)==null?void 0:E.secret)!=null&&O.url?(b(),D(Qe,{key:0,value:v(l).password},null,8,["value"])):(b(),D(rt,{key:1,id:"password",autofocus:e.secret!=null,ref_key:"passwordInput",ref:t,modelValue:v(l).password,"onUpdate:modelValue":c[1]||(c[1]=B=>v(l).password=B),type:"text",class:"mt-1 block w-full",placeholder:i.value},null,8,["autofocus","modelValue","placeholder"])),N(pe,{message:v(l).errors.password,class:"mt-2"},null,8,["message"])]),!((S=(A=u.$page.props.jetstream.flash)==null?void 0:A.secret)!=null&&S.url)&&e.secret==null?(b(),C("div",Wt,[N(Kt,{id:"expires_in",modelValue:v(n).expires_in,"onUpdate:modelValue":c[2]||(c[2]=B=>v(n).expires_in=B),class:"mt-1 block w-full",options:u.$page.props.config.secrets.expiry_options},null,8,["modelValue","options"]),N(pe,{message:v(l).errors.expires_in,class:"mt-2"},null,8,["message"])])):j("",!0)])])]}),actions:T(()=>{var w,x,k,I,P,m;return[e.secret==null?(b(),C("span",Zt,[(x=(w=u.$page.props.jetstream.flash)==null?void 0:w.secret)!=null&&x.url?(b(),D(fe,{key:0,onClick:Z(a,["prevent"]),class:M({"opacity-25":v(n).processing}),disabled:v(n).processing},{default:T(()=>c[7]||(c[7]=[_(" Let's do another one ")])),_:1},8,["class","disabled"])):(b(),D(fe,{key:1,onClick:Z(r,["prevent"]),class:M({"opacity-25":v(n).processing}),disabled:v(n).processing},{default:T(()=>c[8]||(c[8]=[_(" Generate link ")])),_:1},8,["class","disabled"]))])):(b(),C("span",Jt,[(I=(k=u.$page.props.jetstream.flash)==null?void 0:k.secret)!=null&&I.message?j("",!0):(b(),D(fe,{key:0,onClick:Z(d,["prevent"]),class:M({"opacity-25":v(o).processing||((P=v(l).password)==null?void 0:P.length)==0||v(l).password==null}),disabled:v(o).processing||((m=v(l).password)==null?void 0:m.length)==0||v(l).password==null},{default:T(()=>c[9]||(c[9]=[_(" Retrieve Message ")])),_:1},8,["class","disabled"]))]))]}),_:1}),(h=(f=u.$page.props.jetstream.flash)==null?void 0:f.secret)!=null&&h.url?j("",!0):(b(),D(It,{key:0,class:"pt-4"},{default:T(()=>[c[15]||(c[15]=y("h2",{class:"text-4xl font-extrabold dark:text-white"},"F.A.Q.",-1)),N(F,{question:"How safe is sharing a secret with "+u.$page.props.config.app.name+" ?"},{default:T(()=>[_(" The secret message is encrypted on your browser. The passphrase and the plaintext secret message is never sent to "+U(u.$page.props.config.app.name)+". Only the encrypted message is sent to the server. So we have no means to decrypt the message. For the same reason, a hacker who gains complete access to all our systems will still not be able to decode the secret message. ",1)]),_:1},8,["question"]),N(F,{question:"How do you compare with other providers, like onetimesecret.com?"},{default:T(()=>[_(" Most other providers like onetimesecret.com send the secret and password as plaintext to the server and the server does the encryption. Though the good people at onetimesecret.com do not misuse this, a man in the middle could still grab the secret message. "+U(u.$page.props.config.app.name)+" encrypts the message on your browser before sending it to the server. This way we, or a man in the middle, do not know what the secret is or what the passphrase to decrypt it is. ",1)]),_:1}),N(F,{question:"How secure is the encryption?"},{default:T(()=>c[10]||(c[10]=[_(" The encryption is based on AES-256-CBC which is one for most secure encryption algorithms available to mankind. With the existing technology it will take millions of years for someone to crack the encryption. ")])),_:1}),N(F,{question:"Why don't you add the passphrase to the link like other providers?"},{default:T(()=>c[11]||(c[11]=[_(" While it is convinient for the end user to encode the passphrase into the link, it would also mean that our server receives the passphrase and so does a man in the middle. By not including the passphrase in the link, we have completely cut off ourselves and any man in the middle from being able to retrieve the secret message. ")])),_:1}),N(F,{question:"How do I delete the secret message?"},{default:T(()=>c[12]||(c[12]=[_(" The secret message is deleted when it reaches the expiry set while generating the secret link, or on the first attempt to retrieve the message - whichever comes first. If you wish to manually delete the secret before it is retrieved, you could just visit the same link and give any random password and press retrieve to delete the message. ")])),_:1}),N(F,{question:"How long will the secret be available?"},{default:T(()=>c[13]||(c[13]=[_(" The secret message is deleted when it reaches the expiry set while generating the secret link, or on the first attempt to retrieve the message - whichever comes first. ")])),_:1}),N(F,{question:"What would be some of the usecases?"},{default:T(()=>c[14]||(c[14]=[y("ul",{class:"list-disc list-inside"},[y("li",null,"For sending passwords, or share your Netflix credentials with familiy."),y("li",null,"To confess to your secret crush."),y("li",null,"Tell your kids about your grandfathers secret treasure stash."),y("li",null,"Literally anything...")],-1)])),_:1})]),_:1}))],64)}}},tr="/build/assets/logo-m6iWsb0r.png",rr={class:"relative min-h-screen flex flex-col items-center justify-center"},ar={class:"relative w-full max-w-2xl px-6 lg:max-w-7xl"},nr={class:"grid grid-cols-2 items-center gap-2 py-10 lg:grid-cols-3"},sr={class:"flex lg:justify-center lg:col-start-2"},or=["src"],ir={key:0,class:"-mx-3 flex flex-1 justify-end"},lr={class:"mt-6 grid-cols-1 gap-6 max-w-4xl mx-auto"},pr={__name:"Welcome",props:{canLogin:{type:Boolean,default:!1},canRegister:{type:Boolean,default:!1},secret:{type:String,default:null},decryptUrl:{type:String,default:null}},setup(p){const a=le(()=>"bg-gray-50 text-black/50 dark:bg-black dark:text-white/50 bg-cover ");return(e,t)=>(b(),C(ce,null,[N(v(tt),{title:"Welcome"}),y("div",{class:M(a.value),style:et({"background-image":`url(${v(nt)})`})},[y("div",rr,[y("div",ar,[y("header",nr,[y("div",sr,[N(v(ee),{href:"/"},{default:T(()=>[y("img",{src:v(tr),class:"h-24 w-auto"},null,8,or)]),_:1})]),p.canLogin?(b(),C("nav",ir,[e.$page.props.auth.user?(b(),D(v(ee),{key:0,href:e.route("dashboard"),class:"rounded-md px-3 py-2 text-black ring-1 ring-transparent transition hover:text-black/70 focus:outline-none focus-visible:ring-[#FF2D20] dark:text-white dark:hover:text-white/80 dark:focus-visible:ring-white"},{default:T(()=>t[0]||(t[0]=[_(" Dashboard ")])),_:1},8,["href"])):(b(),C(ce,{key:1},[N(v(ee),{href:e.route("login"),class:"rounded-md px-3 py-2 text-black ring-1 ring-transparent transition hover:text-black/70 focus:outline-none focus-visible:ring-[#FF2D20] dark:text-white dark:hover:text-white/80 dark:focus-visible:ring-white"},{default:T(()=>t[1]||(t[1]=[_(" Log in ")])),_:1},8,["href"]),p.canRegister?(b(),D(v(ee),{key:0,href:e.route("register"),class:"rounded-md px-3 py-2 text-black ring-1 ring-transparent transition hover:text-black/70 focus:outline-none focus-visible:ring-[#FF2D20] dark:text-white dark:hover:text-white/80 dark:focus-visible:ring-white"},{default:T(()=>t[2]||(t[2]=[_(" Register ")])),_:1},8,["href"])):j("",!0)],64))])):j("",!0)]),y("main",lr,[N(er,{secret:p.secret,"decrypt-url":p.decryptUrl},null,8,["secret","decrypt-url"])]),t[3]||(t[3]=y("footer",{class:"py-16 text-center text-sm text-black dark:text-white/70"},null,-1))])])],6)],64))}};export{pr as default};
